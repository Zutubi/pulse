label=property
introduction=Properties are named values that can be configured in various areas.  These \
  properties are then made available to the build.
verbose=Properties are named values that can be configured in various areas.  These \
  properties are then made available to the build.  Generally speaking, properties introduced in a \
  more "local" configuration will override those defined in a more "general" configuration.  For \
  example, project properties my be overridden by stage-specific properties.

name.label=name
name.verbose=The name of the property, used to reference it later.

description.label=description
description.verbose=A human readable description of this property available to help you keep track \
  of what this property is for.

value.label=value
value.verbose=The value which the property should resolve to.

addToEnvironment.label=add to environment
addToEnvironment.help=if checked, when this property is imported it will be added to the environment for child processes launched by pulse
addToEnvironment.verbose=If checked, when this property is imported it will be added to the \
  environment for child processes launched by pulse.  Note that all properties with names that \
  do not contain special characters are already made available in the environment as PULSE_* \
  variables.  These variables have all uppercase names and periods are replaced by underscores. \
  When a property is marked add to environment, however, it is added directly without converting \
  the name.

addToPath.label=add to path
addToPath.help=if checked, the value of this property will be added as a directory to search \
  for executables when launching child processes
addToPath.verbose=If checked, the value of this property will be added as a directory to search \
  for executables when launching child processes.  Note that this is more powerful than merely \
  changing PATH, as changes to PATH are not used by Pulse itself to launch processes.

resolveVariables.label=resolve variables
resolveVariables.help=if checked, variable references (e.g. $'{'env.PATH'}') will be resolved \
  in the property value
resolveVariables.verbose=If checked, variable references (e.g. $'{'env.PATH'}') will be resolved \
  in the property value.  Note that resolving variables changes how special characters such as \
  dollar signs and backslashes are interpreted.  To include a literal backslash, for example, you \
  would need to escape it with another backslash.
