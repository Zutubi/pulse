monitor.label=monitor
monitor.verbose=When checked, the SCM will be polled for new changes.  When a change is detected, \
  an event is raised.  If the project has an SCM trigger defined, a new build will be triggered.

customPollingInterval.label=use custom polling interval
customPollingInterval.help=check to override the default, server-wide polling interval
customPollingInterval.verbose=When checked, this project can define its own polling interval \
  rather than using the server-wide default.

pollingInterval.label=polling interval (minutes)
pollingInterval.help=interval in minutes between polls of this scm
pollingInterval.verbose=Minutes between successive polls of this scm for new changes.  A higher \
  value reduces load on the scm, but increases the average time before a new change is noticed.

quietPeriodEnabled.label=enable quiet period
quietPeriodEnabled.help=check to enforce a minimum period between checkins before a separate \
  change is detected
quietPeriodEnabled.verbose=When checked, a quiet period may be specified to help ensure a single \
  change is not detected as multiple, separate changes.

quietPeriod.label=quiet period (minutes)
quietPeriod.verbose=Minutes of quiet time after a change is detected before triggering a build.  \
  Because some SCMs do not support atomic commits, it is possible for pulse to trigger a build \
  after detecting the start of a long running commit. The resulting build will more often than not \
  incorrectly signal a build failure. By specifying a quiet period, you are telling pulse to wait \
  for a period of repository inactivity that is at least as long as the quiet period before \
  triggering a build.

includedPaths.label=included paths
includedPaths.help=paths to include when polling for and reporting changes
includedPaths.verbose=<p>SCM inclusions and exclusions allow you to filter modifications that are \
  used to trigger a build, and reported as changes in the build reports. Inclusions may be used to \
  indicate which files should be considered in change detection and reporting. If, for example, you \
  want to limit change reporting to a specific subdirectory of your project, you could specify a \
  single inclusion that only matches files under that directory.  Note that when no inclusions are \
  specified, all files are considered to pass the inclusion filter.</p>\
  <p>Filter paths are specified as Ant patterns.  These are paths that use forward slashes as a \
  separator and can include the wildcard * to mean any path element and ** to mean any sequence \
  of path elements.  The filters are matched against the paths in the same format that they \
  appear on the &quot;changes&quot; tab for a build.</p>
includedPaths.example.1=//depot/my-project/src/**
includedPaths.example.1.blurb=Only report changes to files under the src/ directory

excludedPaths.label=excluded paths
excludedPaths.help=paths to exclude when polling for and reporting changes
excludedPaths.verbose=<p>SCM inclusions and exclusions allow you to filter modifications that are \
  used to trigger a build, and reported as changes in the build reports. Exclusions may be used to \
  indicate which files should be ignored in change detection and reporting. If, for example, you have \
  certain files (such as web pages or document files) under source control that you don''t want to have \
  trigger the build, you can use an exclusion to ensure that their changes will not trigger a \
  new build.  Files that match any of the specified exclusions will be ignored.</p>\
  <p>Filter paths are specified as Ant patterns.  These are paths that use forward slashes as a \
  separator and can include the wildcard * to mean any path element and ** to mean any sequence \
  of path elements.  The filters are matched against the paths in the same format that they \
  appear on the &quot;changes&quot; tab for a build.</p>
excludedPaths.example.1=//depot/my-project/docs/**
excludedPaths.example.1.blurb=Exclude all documentation, stored in a docs directory directly under \
  the project path in a Perforce depot
excludedPaths.example.2=**/*.html
excludedPaths.example.2.blurb=Exclude all .html files anywhere in the source tree
