#macro(actionHeader $id $action $img $url)
    <th><img alt="$action" src="$base/images/${img}.gif"/> #if($url)<a href="$url" id="$id">#end$action#if($url)</a>#end</th>
#end

#authorisationTags($principle)
<html>
<head>
    <title>welcome</title>
    <style>
        h1 { margin-top: 0.8em; }
        table.template-actions, p { width: 770px; }
    </style>
</head>
<body>
    <h1 id="welcome.heading">:: #wwtext("name=welcome") :: </h1>
    <p>
        Welcome to the Pulse 2.1 <span style="color: red; font-weight: bold">EAP</span>!  Early
        Access builds give you a chance to play with new Pulse features before they hit the street.
        It's your best chance to give feedback on these features!
    </p>
    <p>
        You can return to this page at any time by clicking on the "pulse 2" link in the top left
        corner.
    </p>
    <h1> :: getting started :: </h1>
    <p>
        New to Pulse?  Here are a few ways to get started:
    </p>
    <p>
        <table class="template-actions" cellspacing="5px">
            <tr>
                <th class="category" colspan="2">configure</th>
            </tr>
#auth("path=projects" "action=create")
            <tr>
                #actionHeader("add.projects" "add new projects" "add" "$urls.adminProjects()")
                <td>using the add project wizard (administration &gt; projects tab)</td>
            </tr>
#end
#auth("path=users" "action=create")
            <tr>
                #actionHeader("add.users" "add new users" "add" "$urls.adminUsers()")
                <td>at the users view (administration &gt; users tab)</td>
            </tr>
#end
#auth("path=agents" "action=create")
            <tr>
                #actionHeader("add.agents" "add new agents" "add" "$urls.adminAgents()")
                <td>using the add agent wizard (administration &gt; agents tab)</td>
            </tr>
#end
#auth("path=settings" "action=write")
            <tr>
                #actionHeader("configure.settings" "configure server settings" "pencil" "$urls.adminSettings()")
                <td>at the server settings view (administration &gt; settings tab)</td>
            </tr>
#end
            <tr>
                #actionHeader("configure.preferences" "configure your preferences" "pencil" "$urls.dashboardPreferences()")
                <td>at the preferences view (dashboard &gt; preferences tab)</td>
            </tr>
            <tr>
                <th class="category" colspan="2">explore</th>
            </tr>
            <tr>
                #actionHeader("view.dashboard" "go to your home page" "zoom" "$urls.dashboard()")
                <td>at the dashboard view (dashboard &gt; home)</td>
            </tr>
            <tr>
                #actionHeader("browse.projects" "browse build reports" "zoom" "$urls.browse()")
                <td>at the browse view (browse)</td>
            </tr>
            <tr>
                #actionHeader("view.activity" "view server activity" "zoom" "$urls.server()")
                <td>at the server view (server)</td>
            </tr>
            <tr>
                #actionHeader("view.agents" "view all agents" "zoom" "$urls.agents()")
                <td>at the agents view (agents)</td>
            </tr>
        </table>
    </p>
    
    <h1> :: what's new :: </h1>
    <p>
        Pulse 2.1 has a couple of major new features.  Be warned that these are very much a work in
        progress.  In particular, these features are not very user friendly just yet!
    </p>
    <p>
        <table class="template-actions" cellspacing="5px" style="margin-bottom: 10px;">
            <tr>
                <th class="category" colspan="2">new in 2.1</th>
            </tr>
            <tr>
                #actionHeader("project.dependecies" "project dependencies" "accept" false)
                <td>
                    Pulse now boasts project dependency management, allowing you to declare
                    dependencies between your projects and deliver built artifacts between them.
                    Future 2.1 versions will also include smart triggering for dependent projects.
                    Dependency support is built on Apache Ivy, making it interoperable with Maven
                    and Ivy repositories, and with projects that already use Ivy.  Pulse can act as
                    an Ivy repository both for internal projects, and later for external ones.
                </td>
            </tr>
            <tr>
                #actionHeader("multi.command.projects" "multi-command projects" "accept" false)
                <td>
                    Pulse has always allowed a build to consist of multiple steps, but in previous
                    versions to access this flexibility you had to write a Pulse file by hand.  Now
                    there is full UI support for configuring multi-command projects, and the full
                    flexibility of all the commands has also been exposed in the UI.  You can still
                    write your Pulse files by hand, and in fact they have been simplified in some
                    ways.
                </td>
            </tr>
        </table>
    </p>
</body>
</html>
