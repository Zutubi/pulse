#helpTag("Build+Details+Tab")
#authorisationTags($principle)
#buildTags($project $result "details")
#if($commandResult)
    #set($resultId = $commandResult.id)
#elseif($recipeResultNode)
    #set($resultId = $recipeResultNode.result.id)
#else
    #set($resultId = $buildResult.id)
#end
<html>
<head>
    <title>#wwtext("name=build") $result.number</title>
    <script type="text/javascript">
        var detailPanel;
        var resultTree;
        var paneLoading = false;
        var selectedResultId = '$resultId';

        function refreshDetails()
        {
            var rootNode = resultTree.getRootNode();

            Ext.Ajax.request({
                url: '$base/ajax/getBuildStatus.action',
                params: {
                    buildId: '$result.id'
                },
                success: function(rspObj) {
                    var status = Ext.util.JSON.decode(rspObj.responseText);
                    var iconEl = rootNode.getUI().getIconEl();
                    iconEl.className = iconEl.className.replace(/\bstatus-.+\b/, 'status-' + status);
                }
            });

            var selectedNode = resultTree.getSelectionModel().getSelectedNode();
            if (selectedNode)
            {
                selectedResultId = selectedNode.attributes.extraAttributes.resultId;
            }

            resultTree.getLoader().load(resultTree.getRootNode(), function()
            {
                rootNode.expand(true);
            });
        }

        function onSelect(selectionModel, node)
        {
            if (!node) return;

            paneLoading = true;
            var scrollPosition = detailPanel.body.getScroll();
            detailPanel.body.load({
                url: '${base}/ajax/buildDetailsPanel.action',
                params: node.attributes.extraAttributes,
                scripts: true,
                callback: function(element, success, response) {
                    paneLoading = false;
                    if (scrollPosition)
                    {
                        element.scrollTo('left', scrollPosition.left);
                        element.scrollTo('top', scrollPosition.top);
                    }

                    if (!success)
                    {
                        onSelectFailure(element, response);
                    }
                }
            });
        }
        
        Ext.onReady(function()
        {
            detailPanel = new Ext.Panel({
                layout: 'fit',
                id: 'detail-panel',
                contentEl: 'center',
                border: false,
                autoScroll: true,
                bodyStyle: 'padding: 16px'
            });
            
            var center = Ext.getCmp('nested-center');
            center.add(detailPanel);

            var loader = new Zutubi.tree.FSTreeLoader({
                baseUrl: '$base',
                basePath: 'builds/$result.id',
                preloadDepth: 2,
                showFiles: true,
                clearOnLoad: true
            });
            
            resultTree = new Zutubi.tree.ConfigTree({
                el: 'result-tree',
                layout: 'fit',
                border: false,
                animate: false,
                loader: loader,
                autoScroll: true,
                bodyStyle: 'padding: 10px'
            });

            var root = new Ext.tree.AsyncTreeNode({
                baseName: 'details',
                text: 'build $result.number',
                iconCls: 'status-$result.state.string',
                extraAttributes: {
                    projectName: '#jss($projectName)',
                    buildVID: '$result.number',
                    personal: '$result.personal',
                    resultId: '$result.id'
                }
            });
            
            resultTree.setRootNode(root);
            resultTree.getSelectionModel().on('selectionchange', onSelect);

            var nestedWest = Ext.getCmp('nested-west');
            nestedWest.add(resultTree);

            resultTree.render();
            resultTree.on('load', function(node) {
                if (node.attributes.extraAttributes.resultId == selectedResultId)
                {
                    node.select();
                }
            });

            nestedWest.show();
            nestedWest.setWidth(300);
            viewport.doLayout();

#if($refreshInterval || $principle.preferences.refreshingEnabled)
    #if($refreshInterval)
            var refreshInterval = $refreshInterval;
    #else
            var refreshInterval = $principle.preferences.refreshInterval;
    #end

            var runner = new Ext.util.TaskRunner();
            runner.start({
                run: refreshDetails,
                scope: this,
                interval: 1000 * refreshInterval
            });
#else
            root.expand(true);
#end
        });
    </script>
</head>
<body>
    #buildTabs($result "details")
    
    <div id="result-tree">
    </div>
    <div id="detail-panel" style="min-height: 100%">
        #parse("/template/includes/actionerrors.vm")
    </div>
</body>
</html>
