## Page properties are specified using <content tag="selectedTab">navigate</content>
#if($page.getProperty("page.projectId"))
    #set ($projectId = $page.getProperty("page.projectId"))
#end
#if($page.getProperty("page.projectName"))
    #set ($projectName = $page.getProperty("page.projectName"))
#end
#if($page.getProperty("page.personalBuild"))
    #set ($personalBuild = true)
#end
#if($page.getProperty("page.buildId"))
    #set ($buildId = $page.getProperty("page.buildId"))
#end
#if($page.getProperty("page.buildNumber"))
    #set ($buildNumber = $page.getProperty("page.buildNumber"))
#end
#if($page.getProperty("page.resultNodeId"))
    #set ($resultNodeId = $page.getProperty("page.resultNodeId"))
#end
#if($page.getProperty("page.stageName"))
    #set ($stageName = $page.getProperty("page.stageName"))
#end
#if($page.getProperty("page.agentId"))
    #set ($agentId = $page.getProperty("page.agentId"))
#end
#if($page.getProperty("page.agentName"))
    #set ($agentName = $page.getProperty("page.agentName"))
#end
#if($page.getProperty("page.resourceId"))
    #set ($resourceId = $page.getProperty("page.resourceId"))
#end
#if($page.getProperty("page.resourceName"))
    #set ($resourceName = $page.getProperty("page.resourceName"))
#end
#if($page.getProperty("page.user.name"))
    #set ($userName = $page.getProperty("page.user.name"))
#end
#if($page.getProperty("page.user.login"))
    #set ($userLogin = $page.getProperty("page.user.login"))
#end
#if($page.getProperty("page.helpPage"))
    #set ($helpPage = $page.getProperty("page.helpPage"))
#end
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
  	<head>
        <meta http-equiv="Pragma" content="no-cache"/>
        <meta http-equiv="Expires" content="0"/>
        <meta http-equiv="Cache-Control" content="no-cache"/>
		<title>:: pulse :: #if ($title) $title #end</title>
        <link rel="shortcut icon" href="$base/favicon.ico"/>
        <link rel="icon" type="image/png" href="$base/favicon.png"/>
        <link rel="stylesheet" type="text/css" href="$base/css/ext-all.css?#version()"/>
        <link rel="stylesheet" type="text/css" href="$base/css/xtheme-pagan.css?#version()"/>
        <link rel="stylesheet" type="text/css" href="$base/css/main.css?#version()" media="screen"/>
        <link rel="stylesheet" type="text/css" href="$base/css/form.css?#version()" media="screen"/>
        <link rel="stylesheet" type="text/css" href="$base/css/statusbar.css?#version()" media="screen"/>
        <link rel="stylesheet" type="text/css" href="$base/css/treegrid.css?#version()"/>
#if ($rssEnabled && $projectId && "$projectId" != "0")
        <link rel="alternate" type="application/rss+xml" title="RSS" href="$base/rss.action?projectId=$projectId"/>
#end
        #javascript()
#if($page.getProperty("page.header.javascript"))
            $page.getProperty("page.header.javascript")
#end
            ext/package.js
            ext/StatusBar.js
            widget/treegrid/package.js
            main.js
            zutubi.js
        #end
        
        <script type="text/javascript">
            Ext.BLANK_IMAGE_URL = '$base/images/default/s.gif';
            Ext.MessageBox.buttonText.yes = 'yes';
            Ext.MessageBox.buttonText.no = 'no';
            Ext.MessageBox.buttonText.ok = 'ok';
            Ext.MessageBox.buttonText.cancel = 'cancel';

            window.formSubmitting = false;
            window.baseUrl = '$base';
            window.sessionToken = '$sessionToken';

            var viewport;
            var statusAreaEl;
            var statusMessageEl;

            var PageLayout = function() {
                return {
                    init: function() {
                        Ext.QuickTips.init();

                          var toolbarConfig = {};
                          toolbarConfig.selectedTab = '$page.getProperty("page.selectedBuildTab")';
#if($personalBuild)
                          toolbarConfig.personalBuild = true;
                          toolbarConfig.projectName = 'my builds';
                          toolbarConfig.projectUrl = '#jss($urls.dashboardMyBuilds())';
#if($u_stageName)
                          toolbarConfig.stageName = '#jss($h_stageName)';
                          toolbarConfig.stageUrl = '#jss($urls.dashboardMyBuildStageDetails($buildNumber, $u_stageName))';
#end
#elseif($u_projectName)
                          toolbarConfig.personalBuild = false;
                          toolbarConfig.projectName = '#jss($h_projectName)';
                          toolbarConfig.projectUrl = '#jss($urls.projectHome($u_projectName))';
#if($u_stageName)
                          toolbarConfig.stageName = '#jss($h_stageName)';
                          toolbarConfig.stageUrl = '#jss($urls.stageDetails($u_projectName, $buildNumber, $u_stageName))';
#end
#end
#if($buildNumber && $buildNumber != "0")
                          toolbarConfig.buildId = '$buildResult.id';
#if ($action.viewport)
                          toolbarConfig.data = Ext.util.JSON.decode('#json($action.viewport)');
#end
#end
#if($u_agentName)
                          toolbarConfig.agentName = '#jss($h_agentName)';
                          toolbarConfig.agentUrl = '#jss($urls.agentStatus($u_agentName))';
#end
#if($loggedInUser)
                          toolbarConfig.userName = Ext.util.Format.htmlEncode('#jss($loggedInUser.config.name)');
#if($canLogout)
                          toolbarConfig.userCanLogout = true;
#end
#end
#if($helpPage)

#else
#set($helpPage = "Home")
#end
                        var toolbar = new Zutubi.PulseHeader(toolbarConfig);
                        toolbar.render('header');

                        // If there is a tab bar, drop it in to the north div.
                        var tabbar = Ext.get('tabbar');
                        if(tabbar)
                        {
                            var north = Ext.get('north');
                            north.appendChild(tabbar);
                        }

                        Ext.get('center').setStyle('margin', '16px');

                        viewport = new Ext.Viewport({
                            layout: 'border',
                            defaults: {
                                layout: 'fit',
                                border: false
                            },
                            items: [{
                                region: 'north',
                                contentEl: 'north',
                                split: false
                            }, {
                                region: 'south',
                                contentEl: 'south',
                                split: false
                            }, {
                                region: 'center',
                                layout: 'border',
                                id: 'nested-layout',
                                autoScroll: false,
                                defaults: {
                                    layout: 'fit',
                                    border: false
                                },
                                items: [{
                                    region: 'north',
                                    contentEl: 'status-area',
                                    id: 'status-component',
                                    split: false,
                                    hidden: true
                                }, {
                                    region: 'center',
                                    id: 'nested-center',
                                    contentEl: 'center',
                                    split: false,
                                    autoScroll: true
                                }, {
                                    region: 'west',
                                    id: 'nested-west',
                                    split: true,
                                    titlebar: false,
                                    collapsible: true,
                                    collapseMode:'mini',
                                    hideCollapseTool:true,
                                    hidden: true
                                }, {
                                    region: 'east',
                                    id: 'nested-east',
                                    xtype: 'xzhelppanel',
                                    split: true,
                                    collapsible: true,
                                    collapsed: true,
                                    collapseMode:'mini',
                                    hideCollapseTool:true,
                                    width: 450,
                                    hidden: true,
                                    autoScroll: true,
                                    bodyStyle: "padding: 10px"
                                }]
                            }]
                        });

                        statusAreaEl = Ext.get('status-area');
                        statusMessageEl = Ext.get('status-message');

                        ## By default, focus on a dummy link in the center
                        ## panel so that the user can scroll using the keyboard
                        ## only (focusing on a div fails in Safari).
                        var focusLink = Ext.get('focus-link');
                        if (focusLink)
                        {
                            focusLink.focus();
                        }
                    }
                };
            }();

            Ext.onReady(PageLayout.init, PageLayout, true);

            function hideStatus(animate)
            {
                var component = Ext.getCmp('status-component');
                if(animate)
                {
                    statusAreaEl.setVisible(false, {
                        callback: function() {
                            component.hide();
                            Ext.getCmp('nested-layout').doLayout();
                        }
                    });
                }
                else
                {
                    statusAreaEl.setVisible(false, false);
                    component.hide();
                    Ext.getCmp('nested-layout').doLayout();
                }
            }

            function showStatus(message, type)
            {
                if(type)
                {
                    var imageMap = {
                        'success': 'accept',
                        'failure': 'exclamation',
                        'working': 'inprogress'
                    };
                    message = '<img src="${base}/images/' + imageMap[type] + '.gif" alt="[' + type + ']"/> ' + message;
                }

                var component = Ext.getCmp('status-component');
                component.show();
                statusMessageEl.update(message);
                statusAreaEl.setVisible(true, true);
                Ext.getCmp('nested-layout').doLayout();
            }
        </script>

		$head
	</head>

    <body #if($page.getProperty("page.onLoad")) onload="$page.getProperty('page.onLoad')" #end >
      <noscript><ul class="error"><li class="error">The Pulse UI requires JavaScript.</li></ul></noscript>
      <div id="north">
          <div id="header"></div>

#if($page.getProperty("page.selectedTab"))
    #set ($selectedTab = $page.getProperty("page.selectedTab"))
#end
          <ul id="nav">
#if($loggedInUser)
            <li><a #if($selectedTab && $selectedTab == "dashboard")      class="active" #end id="tab.dashboard" href="$base/dashboard/">dashboard</a></li>
#end
            <li><a #if($selectedTab && $selectedTab == "projects")       class="active" #end id="tab.projects" href="$base/browse/">browse</a></li>
            <li><a #if($selectedTab && $selectedTab == "server")         class="active" #end id="tab.queues" href="$base/server/">server</a></li>
            <li><a #if($selectedTab && $selectedTab == "agents")         class="active" #end id="tab.agents" href="$base/agents/">agents</a></li>
            <li><a #if($selectedTab && $selectedTab == "administration") class="active" #end id="tab.administration" href="$base/admin/projects/">administration</a></li>
          </ul>
          <div class="clear"></div>
      </div>

      <div id="status-area" class="x-layout-inactive-content status-message" style="display: none">
          <span style="float: right"><a class="unadorned" href="#" onclick="hideStatus(); return false;"><img src="$base/images/close.gif" alt="close"/></a></span>
          <span id="status-message"></span>
      </div>

      <div id="content" class="x-layout-inactive-content"></div>

      <div id="center">
          <a id="focus-link" href="#" style="position: absolute; top: -10px; left: -10px"></a>          
          $body
      </div>
        
      <div id="south">
         <b>::</b> <a href="http://zutubi.com/products/pulse/">pulse</a> ($version_number #$build_number)
         <b>::</b> copyright &copy; 2005-2011 <a href="http://zutubi.com/">zutubi pty ltd</a> <b>::</b>
         <a href="http://jira.zutubi.com/">report bug/request feature</a>
     #if($license)
          #if($license.evaluation)
              #if($license.expired)
                  <div class="license-status" id="license-expired">#wwtext("name=license.expiry.notice")</div>
              #end
          #else
              #if($license.expired)
                  #if($licenseCanRunVersion)
                      <b>::</b> <span id="support-expired">#wwtext("name=license.support.expiry.notice")</span>
                  #else
                      <div class="license-status" id="license-cannot-run">#wwtext("name=license.cannot.run.notice")</div>
                  #end
              #end
              #if($licenseExceeded)
                  <div class="license-status" id="license-exceeded">#wwtext("name=license.exceeded.notice")</div>
              #end
          #end
      #end
      </div>
    </body>
</html>
