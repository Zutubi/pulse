<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
The scheduling subsystem is responsible for configuring the scheduler and any default
triggers.

This context exports:

    scheduler: the systems scheduling manager. All scheduling request should be made to this interface.

    quartzScheduler: Used by the scheduler, the quartz scheduler provides access to temporal scheduling.
                     It is recommended that all scheduling be done via the scheduler interface. However,
                     if this interface is inappropriate, the quartzScheduler is also available.

    callbackService: a service that provides a convenient interface for registering a procedure to be
                     called at some point in the future.

This context requires:

    objectFactory: the systems object factory.

-->
<beans> <!-- do not autowire, quartz scheduler attempts lookup tables in the database that do not exist. -->

    <bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation" value="classpath:com/zutubi/pulse/master/bootstrap/quartz/quartz.properties"/>
        <property name="taskExecutor">
            <ref local="taskExecutor"/>
        </property>
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="threadFactory" ref="threadFactory"/>
        <property name="corePoolSize" value="5"/>
    </bean>

    <bean id="quartzJobFactory" class="com.zutubi.pulse.master.bootstrap.quartz.SpringJobFactory" init-method="init">
        <property name="scheduler">
            <ref local="quartzScheduler"/>
        </property>
        <property name="objectFactory" ref="objectFactory"/>
    </bean>

    <!-- We don't initialise the scheduler here: it must wait for the startup event. -->
    <bean id="schedulerTarget" class="com.zutubi.pulse.master.scheduling.DefaultScheduler" autowire="byName">
        <property name="strategies">
            <list>
                <ref local="cronSchedulerStrategy"/>
                <ref local="simpleSchedulerStrategy"/>
                <ref local="eventSchedulerStrategy"/>
                <ref local="noopSchedulerStrategy"/>
            </list>
        </property>
    </bean>

    <bean id="scheduler" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="target">
            <ref local="schedulerTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="cronSchedulerStrategy" class="com.zutubi.pulse.master.scheduling.CronSchedulerStrategy">
        <property name="quartzScheduler">
            <ref local="quartzScheduler"/>
        </property>
    </bean>
    <bean id="simpleSchedulerStrategy" class="com.zutubi.pulse.master.scheduling.SimpleSchedulerStrategy">
        <property name="quartzScheduler">
            <ref local="quartzScheduler"/>
        </property>
    </bean>

    <bean id="eventSchedulerStrategy" class="com.zutubi.pulse.master.scheduling.EventSchedulerStrategy" autowire="byName">
        <property name="eventManager" ref="eventManager"/>
        <property name="objectFactory" ref="objectFactory"/>
    </bean>

    <bean id="noopSchedulerStrategy" class="com.zutubi.pulse.master.scheduling.NoopSchedulerStrategy"/>

    <!--
    wrap the trigger handler in a transaction to ensure that whatever fires the trigger,
    any changes to the state of the trigger are persisted.
     -->
    <bean id="triggerHandler" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="target">
            <ref local="triggerHandlerTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="triggerHandlerTarget" class="com.zutubi.pulse.master.scheduling.DefaultTriggerHandler">
        <property name="objectFactory" ref="objectFactory"/>
        <property name="triggerDao" ref="triggerDao"/>
    </bean>

    <bean id="callbackService" class="com.zutubi.pulse.master.scheduling.CallbackService">
        <property name="scheduler">
            <ref local="scheduler"/>
        </property>
    </bean>

</beans>
