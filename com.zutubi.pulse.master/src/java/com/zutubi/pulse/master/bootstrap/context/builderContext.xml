<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       default-autowire="byName">

    <util:map id="defaultTransactionAttributes">
        <entry key="get*" value="PROPAGATION_REQUIRED, readOnly"/>
        <entry key="*" value="PROPAGATION_REQUIRED"/>
    </util:map>

    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes" ref="defaultTransactionAttributes"/>
    </bean>

    <util:list id="transactionInterceptors">
        <value>transactionInterceptor</value>
    </util:list>

    <util:list id="securityInterceptors">
        <value>securityInterceptor</value>
    </util:list>

    <util:list id="securityAndTransactionInterceptors">
        <value>securityInterceptor</value>
        <value>transactionInterceptor</value>
    </util:list>

    <bean id="transactionContextTarget" class="com.zutubi.pulse.master.util.TransactionContext"/>
    <bean id="transactionContext" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="transactionContextTarget"/>
        <property name="interceptorNames" ref="transactionInterceptors"/>
    </bean>

    <bean id="masterConfiguration" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetBeanName" value="configurationManager"/>
        <property name="propertyPath" value="appConfig"/>
    </bean>

    <bean id="systemConfiguration" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetBeanName" value="configurationManager"/>
        <property name="propertyPath" value="systemConfig"/>
    </bean>

    <bean id="userPaths" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetBeanName" value="configurationManager"/>
        <property name="propertyPath" value="userPaths"/>
    </bean>

    <bean id="userConfigRoot" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetBeanName" value="userPaths"/>
        <property name="propertyPath" value="userConfigRoot"/>
    </bean>

    <bean id="configRoot" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetBeanName" value="configurationManager"/>
        <property name="propertyPath" value="systemPaths.configRoot"/>
    </bean>

    <bean id="buildManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.zutubi.pulse.master.model.DefaultBuildManager"/>
        </property>
        <property name="interceptorNames" ref="securityAndTransactionInterceptors"/>
    </bean>

    <bean id="changelistManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.zutubi.pulse.master.model.DefaultChangelistManager"/>
        </property>
        <property name="interceptorNames" ref="securityAndTransactionInterceptors"/>
    </bean>

    <bean id="dependencyManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.zutubi.pulse.master.model.DefaultDependencyManager" init-method="init"/>
        </property>
        <property name="interceptorNames" ref="transactionInterceptors"/>
    </bean>

    <bean id="scmManager" class="com.zutubi.pulse.master.scm.DefaultScmManager" init-method="init"/>
    <bean id="pollingService" class="com.zutubi.pulse.master.scm.polling.PollingService"/>
    <bean id="projectInitialisationService" class="com.zutubi.pulse.master.project.ProjectInitialisationService" init-method="init"/>
    <bean id="projectLoggerManager" class="com.zutubi.pulse.master.project.ProjectLoggerManager"/>

    <bean id="projectManagerTarget" class="com.zutubi.pulse.master.model.DefaultProjectManager"/>
    <bean id="projectManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- specifying the target this way since using the 'target' property is causing an assertion failure. -->
        <property name="targetName" value="projectManagerTarget"/>
        <property name="interceptorNames" ref="securityInterceptors"/>
    </bean>

    <bean id="resourceManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.zutubi.pulse.master.model.DefaultResourceManager"/>
        </property>
        <property name="interceptorNames" ref="transactionInterceptors"/>
    </bean>

    <bean id="agentStateManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.zutubi.pulse.master.model.DefaultAgentStateManager"/>
        </property>
        <property name="interceptorNames" ref="transactionInterceptors"/>
    </bean>

    <bean id="testManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.zutubi.pulse.master.model.DefaultTestManager"/>
        </property>
        <property name="interceptorNames" ref="transactionInterceptors"/>
    </bean>

    <bean id="agentManager" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="com.zutubi.pulse.master.agent.DefaultAgentManager"/>
        </property>
        <property name="interceptorNames" ref="securityAndTransactionInterceptors"/>
    </bean>

    <bean id="agentSynchronisationService" class="com.zutubi.pulse.master.agent.AgentSynchronisationService"/>

    <bean id="hostManager" class="com.zutubi.pulse.master.agent.DefaultHostManager"/>

    <bean id="hostStatusManager" class="com.zutubi.pulse.master.agent.HostStatusManager"/>

    <bean id="masterLocationProvider" class="com.zutubi.pulse.master.agent.DefaultMasterLocationProvider"/>

    <bean id="hostPingService" class="com.zutubi.pulse.master.agent.HostPingService" init-method="init"/>

    <bean id="resourceDiscoveryService" class="com.zutubi.pulse.master.agent.ResourceDiscoveryService" init-method="init"/>

    <bean id="recipeTerminationService" class="com.zutubi.pulse.master.agent.RecipeTerminationService" init-method="init"/>

    <bean id="fileLoaderFactory" class="com.zutubi.pulse.master.engine.marshal.MasterPulseFileLoaderFactory" init-method="init"/>

    <bean id="resourceFileLoader" class="com.zutubi.pulse.master.engine.marshal.MasterResourceFileLoader" init-method="init"/>

    <bean id="commandFactory" class="com.zutubi.pulse.core.commands.DefaultCommandFactory"/>

    <bean id="outputFactory" class="com.zutubi.pulse.core.commands.DefaultArtifactFactory"/>

    <bean id="postProcessorFactory" class="com.zutubi.pulse.core.postprocessors.DefaultPostProcessorFactory"/>

    <bean id="serverRecipeService" class="com.zutubi.pulse.servercore.ServerRecipeService" init-method="init"/>

    <bean id="synchronisationTaskFactory" class="com.zutubi.pulse.servercore.agent.SynchronisationTaskFactory"/>

    <bean id="synchronisationTaskRunnerService" class="com.zutubi.pulse.servercore.agent.SynchronisationTaskRunnerService"/>

    <bean id="buildResultRenderer" class="com.zutubi.pulse.master.notifications.renderer.FreemarkerBuildResultRenderer"/>

    <bean id="renderService" class="com.zutubi.pulse.master.notifications.renderer.DefaultRenderService"/>

    <bean id="slaveProxyFactory" class="com.zutubi.pulse.master.agent.SlaveProxyFactory"/>

    <bean id="hessianProxyFactory" class="com.zutubi.pulse.servercore.hessian.CustomHessianProxyFactory"/>

    <bean id="fatController" class="com.zutubi.pulse.master.build.queue.FatController" init-method="init"/>
    <bean id="schedulingController" class="com.zutubi.pulse.master.build.queue.SchedulingController"/>
    <bean id="buildQueue" class="com.zutubi.pulse.master.build.queue.BuildQueue"/>
    <bean id="buildControllerFactory" class="com.zutubi.pulse.master.build.control.DefaultBuildControllerFactory" init-method="init"/>
    <bean id="sequenceManager" class="com.zutubi.pulse.master.model.persistence.hibernate.HibernateSequenceManager"/>

    <bean id="recipeQueue" class="com.zutubi.pulse.master.build.queue.ThreadedRecipeQueue"/>

    <bean id="recipeDispatchService" class="com.zutubi.pulse.master.build.control.RecipeDispatchService" init-method="init"/>

    <bean id="resultNotifier" class="com.zutubi.pulse.master.notifications.ResultNotifier" init-method="init"/>

    <bean id="resourceRepository" class="com.zutubi.pulse.master.MasterResourceRepository"/>
    
    <!-- todo: beans should really be registering themselves with the shutdown manager on startup. -->
    <bean id="shutdownManager" class="com.zutubi.pulse.servercore.ShutdownManager">
        <property name="stoppables">
            <list>
                <ref bean="emailService"/>
                <ref bean="scheduler"/>
                <ref bean="fatController"/>
                <ref bean="recipeQueue"/>
                <ref bean="serverRecipeService"/>
                <ref bean="hostPingService"/>
                <ref bean="hostStatusManager"/>
                <ref bean="jabberManager"/>
                <ref bean="jettyServerManager"/> 
                <ref bean="projectInitialisationService"/>
                <ref bean="projectLoggerManager"/>
                <ref bean="databaseConsole"/>
            </list>
        </property>
    </bean>

    <bean id="tokenManager" class="com.zutubi.pulse.master.api.DefaultTokenManager"/>

    <bean id="notifyConditionFactory" class="com.zutubi.pulse.master.notifications.condition.NotifyConditionFactory"/>

    <bean id="jabberManager" class="com.zutubi.pulse.master.notifications.jabber.JabberManager"/>

    <bean id="licenseMonitor" class="com.zutubi.pulse.master.license.LicenseMonitor" init-method="init"/>

    <bean id="postProcessorManager" class="com.zutubi.pulse.master.PostProcessorManager"/>

    <bean id="guestAccessManager" class="com.zutubi.pulse.master.GuestAccessManager"/>

    <bean id="serviceTokenManager" class="com.zutubi.pulse.servercore.services.ServiceTokenManager" init-method="init"/>

    <!-- re create the file system manager now that the slave details are available. -->
    <bean id="fileSystemManager" class="com.zutubi.pulse.master.vfs.VfsManagerFactoryBean" destroy-method="shutdown"/>

    <bean id="cleanupManager" class="com.zutubi.pulse.master.cleanup.CleanupManager" init-method="init"/>
    <bean id="cleanupScheduler" class="com.zutubi.pulse.master.cleanup.CleanupScheduler" init-method="init"/>

    <bean id="triggerManager" class="com.zutubi.pulse.master.tove.config.project.triggers.TriggerManager"/>

    <bean id="buildHookManager" class="com.zutubi.pulse.master.tove.config.project.hooks.BuildHookManager"/>

    <bean id="buildRequestRegistry" class="com.zutubi.pulse.master.build.queue.BuildRequestRegistry"/>

    <bean id="configurationProvider" class="com.zutubi.tove.config.DefaultConfigurationProvider"/>
    
    <bean id="configurationVariableProvider" class="com.zutubi.pulse.master.tove.config.MasterConfigurationVariableProvider"/>

    <bean id="scmContextFactory" class="com.zutubi.pulse.master.scm.DefaultScmContextFactory">
        <property name="projectsDir" value="#{userPaths.projectRoot}"/>
    </bean>

    <bean id="hessianModuleDescriptorSupportInitialiser" class="com.zutubi.pulse.servercore.dependency.ivy.HessianModuleDescriptorSupportInitialiser" init-method="init">
        <property name="customSerialiserFactory" ref="customSerialiserFactory"/>
    </bean>

    <bean id="toveFileDocManager" class="com.zutubi.pulse.core.marshal.doc.ToveFileDocManager"/>

    <bean id="ivyManager" class="com.zutubi.pulse.core.dependency.ivy.IvyManager" init-method="init">
        <property name="dataDir" value="#{userPaths.data}"/>
    </bean>

    <bean id="repositoryAttributes" class="com.zutubi.pulse.core.dependency.RepositoryAttributes" init-method="init">
        <constructor-arg index="0" value="#{userPaths.repositoryRoot}"/>
    </bean>

    <bean id="projectDependencyGraphBuilder" class="com.zutubi.pulse.master.dependency.ProjectDependencyGraphBuilder"/>

    <bean id="triggerConditionFactory" class="com.zutubi.pulse.master.trigger.DefaultTriggerConditionFactory"/>

    <bean id="lastAccessManager" class="com.zutubi.pulse.master.security.LastAccessManager" init-method="init"/>

    <bean id="recipeRenameListener" class="com.zutubi.pulse.master.model.RecipeRenameListener"/>

    <bean id="scmClientFactory" class="com.zutubi.pulse.core.scm.DelegateScmClientFactory"/>

    <bean id="workDirectoryCleanupService" class="com.zutubi.pulse.master.agent.WorkDirectoryCleanupService" init-method="init"/>
</beans>
