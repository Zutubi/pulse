label=build completed trigger
introduction=Build completed triggers fire when a build of a selected project completes.
verbose=A build completed trigger can be used to trigger a build of a project when a build for \
  another project completes. The trigger may be restricted to only fire for builds with certain \
  states. Typical use cases include:\
  <ul>\
    <li>Triggering a build of a dependent project when a build of a dependency is completed \
        successfully.</li>\
    <li>A continuous schedule for a project, which is triggered whenever a build of itself is \
        completed.</li>\
  </ul>

project.label=project
project.description=this trigger will fire after builds of the selected project
project.verbose=Specifies the project that will cause this trigger to fire. When a suitable build \
  of the selected project completes, this trigger will be fired.

states.label=states
states.verbose=If any states are selected, the trigger will only fire when a build completes in \
  one of the selected states. If no states are selected, the trigger will fire regardless of the \
  build status.

propagateRevision.label=propagate revision
propagateRevision.help=if checked, the revision of the completed build will be used for the \
  triggered build
propagateRevision.verbose=If checked, the revision is propagated from the completed to the \
  triggered build.  That is, the triggered build will use the same source revision as the build \
  it is dependent on.  This can be used to ensure a cascade of dependent builds all occur at a \
  single revision, regardless of new changes to the source tree in the mean time.

supercedeQueued.label=supercede queued
supercedeQueued.help=if checked, new build requests will supercede existing requests from this \
  trigger
supercedeQueued.verbose=If checked, build requests raised by this trigger will supercede existing \
  queued requests from this trigger.  That is, any existing queued request will be updated with \
  the new propagated revision rather than enqueueing a new request.  The existing request will \
  retain its position in the queue.  If there is no existing request, or the corresponding build \
  has already commenced, a new build will be queued.

propagateStatus.label=progagate status
propagateStatus.help=if checked, the status of the completed build will be used for the triggered \
  build
propagateStatus.verbose=If checked, the status is propagated from the completed to the triggered \
  build.  That is, the triggered build will use the same status as the build it is dependent on. \
  This can be used to ensure a cascade of dependent builds all use the same status.

propagateVersion.label=propagate version
propagateVersion.help=if checked, the version of the completed build will be used for the triggered \
  build
propagateVersion.verbose=If checked, the version is propagated from the completed to the triggered \
  build.  That is, the triggered build will use the same version as the build it is dependent on. \
  This can be used to ensure a cascade of dependent builds all use the same version. 

type.label=build completed