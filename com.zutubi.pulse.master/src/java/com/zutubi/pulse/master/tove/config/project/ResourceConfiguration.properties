label=resource
introduction=A resource can be used to represent anything that may be required by a build (e.g. \
  a build tool, libary or operating system).
verbose=<p>Resources are used to describe external requirements for executing builds. Examples of \
  resources include:\
  <ul>\
    <li>The Apache Ant build tool, perhaps a specific version.</li>\
    <li>A specific version of the Linux kernel, for builds targetted at that kernel.</li>\
    <li>A runtime library required to execute the tests for the build.</li>\
  </ul>\
  </p>\
  <p>By adding a resource to the repository on an agent, you can indicate that the resource exists \
  on that server. Additionally, you configure properties for the resource (or specific versions of \
  the resource), and those properties may be accessed when processing recipes. Properties can \
  influence the build in multiple ways:\
  <ol>\
    <li>by introduction into the environment: e.g. you can introduce a property named \
        &quot;JAVA_HOME&quot; into the environment to test against a specific JDK.</li>\
    <li>by influencing the search path: e.g. you can create a property &quot;ant.bin.dir&quot; \
        which can be added to pulse''s executable search path to test using a specific version \
        of Ant</li>\
    <li>by implicit references from certain commands: e.g. the ant command will look for a \
        resource named &quot;ant&quot;</li>\
    <li>by explicit references in pulse files</li>\
  </ul>\
  </p>\
  <p>Resources allow you to abstract the specific loction of a required resource on different \
  agents, and to test against multiple versions of various dependencies.</p>

name.label=name
name.verbose=A descriptive name for the resource.

defaultVersion.label=default version
defaultVersion.help=the version used when no version is specified
defaultVersion.verbose=The version imported by a resource requirement when that requirement does \
  not refer to a specific version.

