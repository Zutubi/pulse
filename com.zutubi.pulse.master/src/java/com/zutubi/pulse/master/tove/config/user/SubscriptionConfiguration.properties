label=subscription
introduction=Subscriptions are used to determine when you should be notified of an event such as a build result.
verbose=<p>A subscription is a connection between a project and a contact point that specifies which notifications you \
  would like to be sent to that contact point. The subscription consists of:\
  <ul>\
    <li>The events you wish to be notified of; and</li>\
    <li>The contact point that will receive notifications</li>\
  </ul>\
  </p>

name.label=name
name.verbose=A descriptive name for the subscription.
name.example.1=all broken builds

contact.label=contact point
contact.verbose=The contact point to notify when this subscription matches an event.

template.label=template
template.verbose=The template to use for formatting the notification message.

attachLogs.label=attach build logs
attachLogs.verbose=If checked, all build and stage logs will be attached to the notification message.  If the contact \
  point does not support attachments (e.g. Jabber), this option is ignored.

logLineLimit.label=limit to tail of length
logLineLimit.help=if not zero, attached logs are limited to the given number of lines, from the end of the long
logLineLimit.verbose=<p>Specifies the maximum number of lines of log in each attachment.  Longer logs are truncated \
  from the front, so the attachment will include only the tail of the log.  Set to zero to disable this limiting (i.e. \
  have the whole log file attached).</p>\
  <p><b>Note</b>: the highest possible limit is currently 250 lines, as this is the most that can be generated \
  reasonably efficiently (particularly when log compression is enabled).</p>

#
# wizard
#
wizard.step.select.label=select subscription type
wizard.step.select.description=Choose the type of subsription to add.
wizard.select.label=subscription type
wizard.step.configure.label=configure subscription
wizard.step.configure.description=Configure the subscription details.
