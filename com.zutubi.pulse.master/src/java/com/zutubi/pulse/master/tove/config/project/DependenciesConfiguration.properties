label=project dependencies

introduction=The project dependencies defines the set of projects that this project \
  depends upon.  The dependent project''s published artifacts are retrieved from the \
  artifact repository at build time and copied into this project''s build according to \
  the retrieval pattern.

dependencies.label=dependencies
dependencies.verbose=The list of dependent projects whose published artifacts are retrieved from \
  the artifact repository to the working directory of this project during the build''s bootstrap \
  phase.  The exact location to which these artifacts are copied is defined by the retrieval pattern.

retrievalPattern.label=retrieval pattern
retrievalPattern.verbose=Defines a pattern that describes where a project''s \
  dependencies will be retrieved.  The pattern can include the following tokens \
  <ul>\
  <li>[artifact]: the name of the artifact</li>\
  <li>[stage]: the name of the stage that publilshed the artifact</li>\
  <li>[ext]: the artifact file extension, and </li>\
  <li>[revision]: the revision of the artifact.</li>\
  </ul> \
  By surrounding a part of the pattern with parentheses, the contents of the parentheses \
  are left out of the result if one of the enclosed tokens does not have a value.
retrievalPattern.example.1=lib/[artifact].[ext]
retrievalPattern.example.1.blurb=The dependencies are retrieved into the base.dir/lib directory
retrievalPattern.example.2=lib/[artifact](.[ext])
retrievalPattern.example.2.blurb=The dependencies are retrieved into the base.dir/lib directory \
  and the artifacts extension is optional 

syncDestination.label=synchronise destination
syncDestination.help=if true, the directory retrieved to will have all non-retrieved files removed
syncDestination.verbose=<p>Controls if the retrieval destination is synchronised to only contain \
  retrieved artifacts or not.  With this option on, after a retrieval completes all files in the \
  destination that are not retrieved artifacts will be deleted.  This is important for correct \
  behaviour when performing incremental builds.  With this option off, no such synchronisation is \
  done - extra files are left as-is in the destination directory.</p>\
  <p>If it is convenient to retrieve your artifacts into a directory that may contain other files, \
  and your builds are not incremental, then you should turn this option off.</p>

status.label=maturity
status.verbose=Indicates the maturity or stability of a build.  This corresponds to the Ivy ''status'', but \
  is renamed here as that term is already used for builds.  It can be used by projects that depend \
  upon this one to choose the builds from which artifacts will be retrieved based on stability.  \
  For instance, builds marked with the integration maturity will only be retrieved for those dependencies that \
  are marked as latest.integration. If, however, the build is marked with the milestone maturity, it will be \
  retrieved for dependencies marked as latest.integration <em>and</em> latest.milestone.

version.label=version
version.verbose=The build version string that will be used to as the version for the published build artifacts.  \
  This version string can reference other build properties.  The version string is available to the running build \
  through the build.version property. \
  When triggering a build via the web ui or the remote api, you can over ride this default \
  to indicate that the build you are running is special, such as ''alpha-1.1'' 
version.example.1=$'{'build.number}
version.example.1.blurb=Use the pulse build number as the version (the default)
version.example.2=SNAPSHOT
version.example.2.blurb=Use the string ''SNAPSHOT'' as the version
