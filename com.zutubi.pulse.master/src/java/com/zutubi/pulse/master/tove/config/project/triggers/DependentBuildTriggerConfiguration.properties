label=dependent build trigger
introduction=Dependent build triggers fire when a project that this project depends upon is built.
verbose=Dependent build triggers fire when a project that this project depends upon is built.  The \
  trigger will only fire if the upstream build is successful.

type.label=dependent builds

propagateStatus.label=progagate status
propagateStatus.help=if checked, the status of the completed build will be used for the triggered \
  build
propagateStatus.verbose=If checked, the status is propagated from the completed to the triggered \
  build.  That is, the triggered build will use the same status as the build it is dependent on. \
  This can be used to ensure a cascade of dependent builds all use the same status.

propagateVersion.label=propagate version
propagateVersion.help=if checked, the version of the completed build will be used for the triggered \
  build
propagateVersion.verbose=If checked, the version is propagated from the completed to the triggered \
  build.  That is, the triggered build will use the same version as the build it is dependent on. \
  This can be used to ensure a cascade of dependent builds all use the same version.

revisionHandling.label=revision
revisionHandling.help=determines if the triggered build''s revision is based on the upstream \
  build''s revision
revisionHandling.verbose=<p>Determines how, if at all, the revision of the upstream build \
  influences the triggered build. Available options are:</p>\
  <ul>\
    <li><b>float independently</b>: The triggered build''s revision is independent of the \
        upstream build, it floats until the triggered build commences.</li>\
    <li><b>fix with upstream</b>: The triggered build''s revision is fixed as soon as \
        possible after the upstream build''s revision is fixed.  This is useful when you \
        want both builds to operate at the same snapshot in time, but cannot use revision \
        propagation (perhaps because the projects use different SCM repositories). Note that it \
        takes some time to fix revisions, so atomic snapshots are not guaranteed.</li>\
    <li><b>propagate from upstream</b>: The triggered build will use the same revision as the \
        upstream build. This gives a guaranteed snapshot in time across both builds, but only \
        makes sense if the revision spans the source of both builds (e.g. both projects use the \
        same SCM repository).</li>\
  </ul>
