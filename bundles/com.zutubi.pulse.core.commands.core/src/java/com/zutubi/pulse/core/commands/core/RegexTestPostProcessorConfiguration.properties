label=regular expression test result processor
introduction=A processor for extracting test results by matching them with a regular expression.
verbose=The regular expression test post-processor is used to process arbitrary unstructured test \
  reports. Based on a single regular expression, the test report is processed one line at a time. \
  Test name and status information is extracted from each line and used to generate a test report.

regex.label=expression
regex.verbose=The regular expression used to extract information.

nameGroup.label=name group
nameGroup.verbose=The index of the regex group that contains the test name.

statusGroup.label=status group
statusGroup.verbose=The index of the regex group that contains the test status.

detailsGroup.label=details group
detailsGroup.verbose=The index of the regex group that contains test details (reported in the \
  details column in test reports).  A value of -1 indicates no details group.

suiteGroup.label=suite group
suiteGroup.verbose=The index of the regex group that contains the test suite name, used to group test cases.\
  A value of -1 indicates no suite group.

durationGroup.label=duration group
durationGroup.verbose=The index of the regex group that contains the test durations. The duration \
   is expected to be a numeric value in milliseconds.  A value of -1 indicates no duration group.

passStatus.label=pass status
passStatus.verbose=The test status that indicates the test has passed.

failureStatus.label=failure status
failureStatus.verbose=The test status that indicates the test has failed.

errorStatus.label=error status
errorStatus.verbose=The tests status that indicates the test errored.

skippedStatus.label=skipped status
skippedStatus.verbose=The test status that indicates the test was skipped.

autoFail.label=auto fail
autoFail.verbose=If true, statuses not matching the pass status will be assumed to indicate failure.

trim.label=trim expression
trim.verbose=Indicates whether or not whitespace should be trimmed from around the regex.

example.simple.blurb=<p>In this example, we want to configure the regex-test post processor to \
  handle the following test report:</p>\
  <div class="example-snippet">PASS - 10/16/2006:18:20:58:EDT - TEST COMMAND\n\
  PASS - 10/16/2006:18:20:58:EDT - TEST COMMAND\n\
  PASS - 10/16/2006:18:20:58:EDT - TEST COMMAND\n\
  FAIL - 10/16/2006:18:20:58:EDT - TEST COMMAND\n\
  PASS - 10/16/2006:18:20:58:EDT - TEST COMMAND\n\
  PASS - 10/16/2006:18:20:58:EDT - TEST COMMAND\n</div>\
  <p>In this test report, we see that the status of the test is available at the start of the \
  line, indicated by PASS or FAIL, and the name of the test is available at the end of the line, \
  ie: TEST COMMAND. A simple regex that can extract this information would be (.*) - .* - (.*), \
  where regex group 1 is the status and group 2 is the test name. Using this information, we can \
  configure the test-regex post processor as follows
