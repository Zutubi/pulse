label=send emails task
introduction=A send emails task can be used to send an email to project contacts and/or users that \
  committed changes that affected the build.
verbose=<p>A send emails task can be used to send a notification email when a build completes.  \
  Emails can be sent to the project contacts and/or to users that committed changes that affected \
  the build. This is an alternative to the subscription system that is available to all pulse \
  users to configure their own notifications. The advantages of this task include centralised \
  configuration and the ability to notify committers that do not have pulse accounts. It is also a \
  simple way to get started with notifications, allowing users to then customise their preferences \
  as they choose later if desired.</p>\
  <p>To send emails to committers, pulse needs to map between login names in the project SCM and \
  email addresses. By default this is done by assuming that the SCM login names and email ids are \
  identical.  This allows you to configure the email addresses by providing just the email \
  domain, which pulse will append to the SCM login (with an "@" in between) to form email \
  addresses.  You can override this default in two ways: by providing explicit mappings from \
  SCM logins to email addresses (via committer mappings in your SCM configation) and/or by turning \
  on the "use scm email addresses" option (if your SCM server knows user emails).</p>

# Form fields
template.label=email template
template.verbose=Defines the template that will be used to render the build result. For example, \
  you can choose HTML or plain text emails.

attachLogs.label=attach build logs
attachLogs.verbose=If checked, all stage logs will be attached to the email.  The build log is not included as it is \
  not yet complete.

logLineLimit.label=limit to tail of length
logLineLimit.help=if not zero, attached logs are limited to the given number of lines, from the end of the long
logLineLimit.verbose=<p>Specifies the maximum number of lines of log in each attachment.  Longer logs are truncated \
  from the front, so the attachment will include only the tail of the log.  Set to zero to disable this limiting (i.e. \
  have the whole log file attached).</p>\
  <p><b>Note</b>: the highest possible limit is currently 250 lines, as this is the most that can be generated \
  reasonably efficiently (particularly when log compression is enabled).</p>

emailContacts.label=email project contacts
emailContacts.verbose=If checked, all project contacts will be emailed.  Note that the contacts \
  must have an email contact point designated as their primary contact.

emailCommitters.label=email committers
emailCommitters.verbose=If checked, all users that committed changes affecting the build will be \
  emailed.  The email addresses of committers are derived based on the settings below.

includeUpstreamCommitters.label=include upstream committers
includeUpstreamCommitters.help=if checked, committers of changes to upstream dependencies will be included
includeUpstreamCommitters.verbose=If checked, the set of committers will be derived from all changes, including those \
  to upstream dependencies, not just changes that directly affected this build.

emailDomain.label=email domain
emailDomain.help=the domain portion to append to scm logins to form email addresses, e.g. example.com
emailDomain.verbose=The domain to send committer notification emails to. This domain is joined to \
  the committer logins (obtained from the SCM) with an ''@'' symbol to form email addresses. \
  So, for example, if the SCM reports that users ''jsmith'' and ''pdexter'' \
  committed changes, and the domain is set to ''example.com'', emails will be sent to \
  ''jsmith@example.com'' and ''pdexter@example.com''.
emailDomain.example.1=example.com

sinceLastSuccess.label=include commits since last success
sinceLastSuccess.help=if checked, all users that have committed a change since the last successful \
  build will be notified
sinceLastSuccess.verbose=If checked, the committers notified will include not just those that \
  submitted a change new to this build, but all users that have committed a change since the last \
  successful build.

useScmEmails.label=use scm email addresses
useScmEmails.help=if checked, the project''s SCM will be asked to map from SCM logins to email \
  addresses
useScmEmails.verbose=If checked, the project''s SCM will be asked to map from SCM logins to email \
  addresses.  If the SCM is incapable of returning email addresses, or has no email for the given \
  user, the default mapping (user@email.domain) will be used.  Note that this setting does not \
  affect the usage of the committer mappings in your SCM configuration: those mappings are always \
  applied.

ignorePulseUsers.label=ignore pulse users
ignorePulseUsers.help=if checked, emails will not be sent to scm logins for which there is a \
  matching pulse user account
ignorePulseUsers.verbose=If checked, users with pulse accounts will not be notified by this \
  mechanism. This allows subscriptions by pulse users to take precedence over this mechanism. \
  Users with pulse accounts are found by matching the SCM logins with pulse logins.
