<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

    <!-- is the initContext really needed? It appears that singletons are initialised anyways
         without being referenced...-->
    <bean id="initContext" class="com.cinnamonbob.bootstrap.SpringContextInitialisation">
    </bean>

    <bean id="velocityEngine" class="com.cinnamonbob.bootstrap.velocity.VelocityEngineFactoryBean"/>

    <bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation">
            <value>classpath:com/cinnamonbob/bootstrap/quartz/quartz.properties</value>
        </property>
    </bean>

    <bean id="quartzJobFactory" class="com.cinnamonbob.bootstrap.quartz.SpringJobFactory" init-method="init">
        <property name="scheduler">
            <ref bean="quartzScheduler"/>
        </property>
    </bean>

    <bean id="buildManager" class="com.cinnamonbob.model.DefaultBuildManager" autowire="byName"/>

    <!-- ==================== -->
    <!-- scheduling subsystem -->

    <bean id="scheduler" class="com.cinnamonbob.scheduling.DefaultScheduler" init-method="init">
        <property name="triggerHandler">
            <ref bean="triggerHandler"/>
        </property>
        <property name="triggerDao">
            <ref bean="triggerDao"/>
        </property>
        <property name="strategies">
            <list>
                <ref bean="cronSchedulerStrategy"/>
                <ref bean="simpleSchedulerStrategy"/>
                <ref bean="eventSchedulerStrategy"/>
            </list>
        </property>
    </bean>

    <bean id="cronSchedulerStrategy" class="com.cinnamonbob.scheduling.CronSchedulerStrategy">
        <property name="quartzScheduler">
            <ref bean="quartzScheduler"/>
        </property>
    </bean>
    <bean id="simpleSchedulerStrategy" class="com.cinnamonbob.scheduling.SimpleSchedulerStrategy">
        <property name="quartzScheduler">
            <ref bean="quartzScheduler"/>
        </property>
    </bean>

    <bean id="eventSchedulerStrategy" class="com.cinnamonbob.scheduling.EventSchedulerStrategy">
        <property name="eventManager">
            <ref bean="eventManager"/>
        </property>
    </bean>

    <bean id="triggerHandler" class="com.cinnamonbob.scheduling.DefaultTriggerHandler">
        <!-- not sure why this is needs to be wired directly. -->
        <property name="triggerDao">
            <ref bean="triggerDao"/>
        </property>
    </bean>

    <bean id="userManagerTarget" class="com.cinnamonbob.model.DefaultUserManager" autowire="byName"/>
    <bean id="userManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="userManagerTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="projectManagerTarget" class="com.cinnamonbob.model.DefaultProjectManager" autowire="byName"/>
    <bean id="projectManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="projectManagerTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="subscriptionManagerTarget" class="com.cinnamonbob.model.DefaultSubscriptionManager" autowire="byName"/>
    <bean id="subscriptionManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="subscriptionManagerTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>


    <bean id="scmManagerTarget" class="com.cinnamonbob.model.DefaultScmManager" autowire="byName" init-method="init"/>
    <bean id="scmManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="scmManagerTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="slaveManagerTarget" class="com.cinnamonbob.model.DefaultSlaveManager" autowire="byName" init-method="init"/>
    <bean id="slaveManager" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="target">
            <ref bean="slaveManagerTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="eventManager" class="com.cinnamonbob.core.event.DefaultEventManager" autowire="byName"/>

    <bean id="objectFactory" class="com.cinnamonbob.core.ObjectFactory" autowire="byName"/>

    <bean id="fileLoader" class="com.cinnamonbob.core.FileLoader" autowire="byName" singleton="false"/>

    <bean id="resourceRepository" class="com.cinnamonbob.core.ResourceRepository" autowire="byName"
          init-method="initialise"/>

    <bean id="recipeProcessor" class="com.cinnamonbob.core.RecipeProcessor" autowire="byName"/>

    <bean id="masterRecipeProcessor" class="com.cinnamonbob.MasterRecipeProcessor" autowire="byName"/>

    <bean id="buildQueue" class="com.cinnamonbob.BuildQueue" autowire="byName"/>

    <bean id="buildResultRenderer" class="com.cinnamonbob.core.renderer.VelocityBuildResultRenderer" autowire="byName"/>

    <bean id="userConfigRoot" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetBeanName">
            <value>configurationManager</value>
        </property>
        <property name="propertyPath">
            <value>applicationPaths.userConfigRoot</value>
        </property>
    </bean>

    <bean id="customSerialiserFactory" class="com.cinnamonbob.hessian.CustomSerialiserFactory"/>

    <bean id="hessianProxyFactory" class="com.cinnamonbob.hessian.CustomHessianProxyFactory" autowire="byName"/>

    <bean id="slaveProxyFactory" class="com.cinnamonbob.SlaveProxyFactory" autowire="byName"/>

    <bean id="fatController" class="com.cinnamonbob.FatController" autowire="byName" init-method="init"/>

    <bean id="recipeQueue" class="com.cinnamonbob.ImmediateDispatchRecipeQueue" autowire="byName" init-method="init"/>

</beans>
