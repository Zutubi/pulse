dashboard.projects.show.all=show all projects
dashboard.projects.groups=select project groups to show

#
# aliases
#
alias=alias
aliases=aliases
alias.add=add new alias
alias.create=add alias
alias.none=no aliases configured
alias.delete.confirm=are you sure you want to delete alias {0}?

#
# contact points.
#
contact.edit=edit contact

contact.name=name
contact.email=email
contact.format=email format
contact.yahooId=yahoo id
contact.uid=uid
contact.error=An error occured attempting to notify this contact:
contact.error.clear=clear
contact.delete.confirm=are you sure you want to delete contact {0}?

email.create=create email contact point
email.edit=edit email contact point
yahoo.create=create yahoo contact point
yahoo.edit=edit yahoo contact point

#
# subscriptions.
#
subscription.create=create subscription
subscription.create.type=select subscription type (1 of 2)
subscription.create.personal=configure personal build subscription (2 of 2)
subscription.create.project=configure project build subscription (2 of 2)
subscription.edit=edit subscription

subscription.to=subscribed to
subscription.template=template
subscription.personal=personal builds
subscription.type=subscribe to
subscription.projects=projects
subscription.projects.all=[all projects]
subscription.projects.help=projects to subscribe to, if no projects are selected the subscription will apply to all projects
subscription.contact=contact
subscription.condition=condition

subscription.delete.confirm=are you sure you want to delete this subscription?
subscription.requires.project=you must create a project before you can create a subscription
subscription.requires.contact=you must create a contact point before you can create a subscription

subscription.condition.all=all builds
subscription.condition.simple=selected builds
subscription.condition.repeated=repeated unsuccessful builds
subscription.condition.advanced=custom condition expression
conditions.builds.any.of=matching any of
conditions.notify.after=notify after
conditions.notify.after.help=useful to flag persistent problems, consider selecting the project overview template below
conditions.custom.expression=expression
conditions.custom.expression.help=type a custom boolean expression, using the help provided to the right

condition.allchanged=builds that include changes
condition.changedbyme=builds that include changes by me
condition.unsuccessful=unsuccessful builds
condition.statechange=builds with a status different to the previous build

conditions.expressions=custom condition expressions
conditions.complex=&lt;expression&gt;
conditions.help.complex=&lt;boolean&gt; (&lt;boolean operator&gt; &lt;boolean&gt;)*
conditions.boolean=&lt;boolean&gt;
conditions.help.boolean=&lt;boolean value&gt; | &lt;comparison&gt;
conditions.comparison=&lt;comparison&gt;
conditions.help.comparison=&lt;integer value&gt; &lt;integer operator&gt; &lt;integer value&gt;
conditions.previous=&lt;value&gt;(previous)
conditions.help.previous=gives value from previous build

conditions.boolean.values=boolean values
condition.help.true=always evaluates to true
condition.help.false=always evaluates to false
condition.help.success=true iff the build succeeded
condition.help.failure=true iff the build failed
condition.help.error=true iff the build encountered an error
condition.help.changed=true iff the build includes a change since the last build
condition.help.changed.by.me=true iff the build includes a change by you since the last build
condition.help.state.change=true iff the build result differs from the result of the previous build

conditions.boolean.operators=boolean operators (in order of increasing precedence)
condition.help.or=a "or" b: evaluates to true if either a or b is true
condition.help.and=a "and" b: evaluates to true if both a and b are true
condition.help.not="not" a: evaluates to true if a is false
conditions.grouping=grouping
condition.help.grouping="(" a ")": used to override precedence, e.g. a and (b or c)

conditions.integer.values=integer values
conditions.integer.literals=integer literal
condition.help.unsuccessful.count.builds=consecutive unsuccessful builds
condition.help.unsuccessful.count.days=consecutive days that the build has been unsuccessful
conditions.integer.operators=integer operators

conditions.string.values=string values
conditions.string.literals=string literal
condition.help.build.specification.name=build specification name

personal.builds=personal builds
personal.builds.blurb=Personal builds allow you to test your changes before committing them to your SCM.  To submit personal build requests, you must install the developer tools on your local machine.  Use the links provided to download a tools package that is compatible with this server.
