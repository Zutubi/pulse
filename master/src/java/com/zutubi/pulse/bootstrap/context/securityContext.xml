<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
The security subsystem contains the configuration of the authentication and authorization system,
based upon the Acegi-Security system.
For details on the individual components configured here, see http://acegisecurity.org/docbook/acegi.html

This file is split into two regions.
a) the upper half deals with authentication.
b) the lower half deals with authorization.

The beans defined within the security subsystem need not be accessed by other contexts.
-->
<beans>

    <!-- do not trigger an init from here. We need the spring context to be completely loaded before
     doing so else the FilterToBeanProxy will be unable to locate the defined beans.
     -->
    <bean id="securityManager" class="com.zutubi.pulse.security.AcegiSecurityManager">
        <property name="jettyManager">
            <ref bean="jettyManager"/>
        </property>
        <property name="authenticationManager">
            <ref bean="authenticationManager"/>
        </property>
    </bean>

    <bean id="ldapManager" class="com.zutubi.pulse.security.ldap.AcegiLdapManager">
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
    </bean>

    <!-- ============================================================= -->
    <!-- The first half of this context is dedicated to authentication -->

    <bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref local="customAuthenticationProvider"/>
                <ref local="rememberMeAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <bean id="customAuthenticationProvider" class="com.zutubi.pulse.security.CustomAuthenticationProvider">
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="passwordEncoder">
            <ref bean="passwordEncoder"/>
        </property>
        <property name="ldapManager">
            <ref bean="ldapManager"/>
        </property>
    </bean>

    <!--
    this filter chain proxy is referenced in web.xml
    -->
    <bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy">
        <property name="filterInvocationDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /ajax/**=authenticationProcessingFilter,basicProcessingFilter,rememberMeProcessingFilter,anonymousProcessingFilter,ajaxExceptionTranslationFilter,filterInvocationInterceptor
                /aaction/**=authenticationProcessingFilter,basicProcessingFilter,rememberMeProcessingFilter,anonymousProcessingFilter,ajaxExceptionTranslationFilter,filterInvocationInterceptor
                /aconfig/**=authenticationProcessingFilter,basicProcessingFilter,rememberMeProcessingFilter,anonymousProcessingFilter,ajaxExceptionTranslationFilter,filterInvocationInterceptor
                /ahelp/**=authenticationProcessingFilter,basicProcessingFilter,rememberMeProcessingFilter,anonymousProcessingFilter,ajaxExceptionTranslationFilter,filterInvocationInterceptor
                /atemplate/**=authenticationProcessingFilter,basicProcessingFilter,rememberMeProcessingFilter,anonymousProcessingFilter,ajaxExceptionTranslationFilter,filterInvocationInterceptor
                /**=authenticationProcessingFilter,basicProcessingFilter,rememberMeProcessingFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
            </value>
        </property>
    </bean>


    <!--
    The AuthenticationProcessingFilter is responsible for handling the login request. It monitors for requests
    sent to 'filterProcessesUrl', and uses the 'authenticationManager' to handle the actual authentication.
    -->
    <bean id="authenticationProcessingFilter" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
        <property name="authenticationManager">
            <ref local="authenticationManager"/>
        </property>
        <property name="authenticationFailureUrl">
            <value>/login!input.action?error=true</value>
        </property>
        <!-- this default is only used when the target url is not available via the session.-->
        <property name="defaultTargetUrl">
            <value>/</value>
        </property>
        <property name="filterProcessesUrl">
            <value>/j_acegi_security_check</value>
        </property>
        <property name="rememberMeServices">
            <ref local="rememberMeServices"/>
        </property>
    </bean>

    <!--
    This filter provides support for processing basic authentication credentials presented in HTTP headers.
    -->
    <bean id="basicProcessingFilter" class="org.acegisecurity.ui.basicauth.BasicProcessingFilter">
        <property name="authenticationManager">
            <ref local="authenticationManager"/>
        </property>
        <property name="authenticationEntryPoint">
            <ref local="basicProcessingFilterEntryPoint"/>
        </property>
        <property name="authenticationDetailsSource">
            <ref local="basicProcessingAuthenticationDetailsSource"/>
        </property>
    </bean>

    <bean id="basicProcessingFilterEntryPoint" class="org.acegisecurity.ui.basicauth.BasicProcessingFilterEntryPoint">
        <property name="realmName">
            <value>Pulse Realm</value>
        </property>
    </bean>

    <!--
    We override the default details class to aid in detecting HTTP basic authentication.
    -->
    <bean id="basicProcessingAuthenticationDetailsSource" class="org.acegisecurity.ui.AuthenticationDetailsSourceImpl">
        <property name="clazz" value="com.zutubi.pulse.security.BasicAuthenticationDetails"/>
    </bean>

    <!--
    This endpoint defines where a user is directed when authentication is required.
    -->
    <bean id="authenticationProcessingFilterEntryPoint"
          class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
        <property name="loginFormUrl">
            <value>/login!input.action</value>
        </property>
        <property name="forceHttps">
            <value>false</value>
        </property>
        <property name="portResolver">
            <ref local="portResolver"/>
        </property>
    </bean>

    <bean id="portResolver" class="org.acegisecurity.util.PortResolverImpl">
        <property name="portMapper">
            <ref local="portMapper"/>
        </property>
    </bean>

    <bean id="portMapper" class="org.acegisecurity.util.PortMapperImpl">
        <property name="portMappings">
            <map>
                <entry key="80"><value>80</value></entry>
            </map>
        </property>
    </bean>

    <bean id="ajaxEntryPoint" class="com.zutubi.pulse.security.AjaxAuthenticationEntryPoint"/>

    <bean id="httpRequestAccessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions">
            <value>false</value>
        </property>
        <property name="decisionVoters">
            <list>
                <ref local="roleVoter"/>
            </list>
        </property>
    </bean>

    <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter">
        <property name="rolePrefix" value=""/>
    </bean>

    <!--
    The remember me processing filter allows for automatic 'remember me' cookie login.
    With the remember me services, we need to ensure that the following links are configured:
    a) AuthenticationProcessingFilter.setRememberMeServices()
    b) AuthenticationManager.setProviders()
    c) FilterChainProxy
    -->
    <bean id="rememberMeProcessingFilter" class="org.acegisecurity.ui.rememberme.RememberMeProcessingFilter">
        <property name="authenticationManager">
            <ref local="authenticationManager"/>
        </property>
        <property name="rememberMeServices">
            <ref local="rememberMeServices"/>
        </property>
    </bean>

    <bean id="rememberMeServices" class="org.acegisecurity.ui.rememberme.TokenBasedRememberMeServices">
        <property name="userDetailsService">
            <ref bean="userManager"/>
        </property>
        <property name="key">
            <value>pulse</value>
        </property>
    </bean>

    <bean id="rememberMeAuthenticationProvider"
          class="org.acegisecurity.providers.rememberme.RememberMeAuthenticationProvider">
        <property name="key">
            <value>pulse</value>
        </property>
    </bean>

    <!--
    AnonymousProcessingFilter, which is chained after the normal authentication mechanisms and automatically
    add an AnonymousAuthenticationToken to the SecurityContextHolder if there is no existing Authentication
    held there.
    -->
    <bean id="anonymousProcessingFilter" class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
        <property name="key">
            <value>foobar</value>
        </property>
        <property name="userAttribute">
            <value>anonymous,ROLE_ANONYMOUS</value>
        </property>
    </bean>

    <bean id="anonymousAuthenticationProvider"
          class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
        <property name="key">
            <value>foobar</value>
        </property>
    </bean>

    <!--
    Filter used to switch the user context. Note: the switch and exit url must be secured
    based on the role granted the ability to 'switch' to another user
    -->
    <!-- In this example 'marissa' has ROLE_SUPERVISOR that can switch to regular ROLE_USER(s) -->
    <bean id="switchUserProcessingFilter" class="org.acegisecurity.ui.switchuser.SwitchUserProcessingFilter">
        <property name="userDetailsService" ref="userManager"/>
        <property name="switchUserUrl">
            <value>/j_acegi_switch_user</value>
        </property>
        <property name="exitUserUrl">
            <value>/j_acegi_exit_user</value>
        </property>
        <property name="targetUrl">
            <value>/acegi-security-sample-contacts-filter/secure/index.htm</value>
        </property>
    </bean>

    <!--
    Not exactly sure what this one does.... other than redirecting a user to the login endpoint
    if they do not comply with the authorization requirements?
    -->
    <bean id="exceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint">
            <ref local="authenticationProcessingFilterEntryPoint"/>
        </property>
        <property name="portResolver">
            <ref local="portResolver"/>
        </property>
    </bean>

    <bean id="ajaxExceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint">
            <ref local="ajaxEntryPoint"/>
        </property>
        <property name="createSessionAllowed">
            <value>false</value>
        </property>
    </bean>

    <!--
    The order that entries are placed against the objectDefinitionSource is critical.
    The FilterSecurityInterceptor will work from the top of the list down to the FIRST pattern that
    matches the request URL. Accordingly, you should place MOST SPECIFIC (ie a/b/c/d.*) expressions
    first, with LEAST SPECIFIC (ie a/.*) expressions last
    -->
    <bean id="filterInvocationInterceptor" class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
        <property name="authenticationManager">
            <ref local="authenticationManager"/>
        </property>
        <property name="accessDecisionManager">
            <ref local="httpRequestAccessDecisionManager"/>
        </property>
        <property name="objectDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
<!--
                /switchuser.vm=ROLE_ADMINISTRATOR
                /j_acegi_switch_user=ROLE_ADMINISTRATOR
-->
                /login*.action*=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /signup*.action*=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /logout.action=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /js/**=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /css/**=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /images/**=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /favicon.*=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /=ROLE_USER,ROLE_GUEST
                /default.action=ROLE_GUEST,ROLE_USER
                /xmlrpc/**=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /hessian/**=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /patch*=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /rss.action*=ROLE_ANONYMOUS,ROLE_GUEST,ROLE_USER
                /view/**/*=ROLE_GUEST,ROLE_USER
                /file/**/*=ROLE_GUEST,ROLE_USER
                /admin/actions/**=ADMINISTER
                /admin/settings/**=ADMINISTER
                /admin/users/**=ADMINISTER
                /admin/groups/**=ADMINISTER
                /admin/plugins/**=ADMINISTER
                /**=ROLE_GUEST,ROLE_USER
            </value>
        </property>
    </bean>
</beans>
