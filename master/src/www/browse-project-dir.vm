#authorisationTags($principle)
#buildTags($buildResult.project $buildResult)
<html>
<head>
    <title>$!webwork.htmlEncode($path)</title>

    <link rel="stylesheet" type="text/css" href="$base/css/treeview/tree.css"/>

    <script type="text/javascript" src="$base/js/prototype.js"></script>
    <script type="text/javascript" src="$base/js/zutubi.js"></script>
    <script type="text/javascript" src="$base/js/yahoo/yahoo.js"></script>
    <script type="text/javascript" src="$base/js/yahoo/treeview.js"></script>
    <script type="text/javascript" src="$base/js/widget/treeview.js"></script>
    <script type="text/javascript" src="$base/js/main.js"></script>
    <script type="text/javascript">

        window.onload = initialize;

        function initialize()
        {
            // only initialise if the browseTree element exists. If the browse tree element does not
            // exist, then we do not want to render the node.
            if (!document.getElementById('browseTree'))
            {
                return;
            }

            var tree = new ZUTUBI.widget.TreeView('browseTree');
            tree.setSeparator('$separator');
            tree.setDynamicLoad(function(node, onCompleteCallback)
            {
                ls(node, onCompleteCallback, false);
            }, 1);
            tree.onActivate = function(node)
            {
                if (!node.isContainer())
                {
                    // display the contents of that node..
                }
            };

            // load the root nodes for the file system, then draw the tree.
            Element.show($('loading'));
            ls(tree.getRoot(), function()
            {
                Element.hide($('loading'));
                tree.draw();
            });
        }

        function ls(node, onCompleteCallback, dirOnly)
        {
            // generate id path.
            var p = node.tree.getIdPath(node);

            var ajax = new Ajax.Request(
                "$base/lsProjDir.action",
                {
                    method: 'get',
                    onComplete: lsResponse(node, onCompleteCallback),
                    onFailure: handleFailure,
                    onException: handleException,
                    parameters: "path=" + p + "&buildId=$buildResult.id"
                }
            );
        }

        function lsResponse(parentNode, callback)
        {
            return function(response)
            {
                var jsonObj = eval("(" + response.responseText + ")");

                var results = $A(jsonObj.listing);
                results.each(function(obj)
                {
                    var data = {
                        "id":obj.id,
                        "name":obj.file,
                        "label":obj.file,
                        "type":obj.type,
                        "container":obj.container
                    };
                    var node = new ZUTUBI.widget.FileNode(data, parentNode, false);
                    //node.href = "/cat.action?path=" + node.getPath();

                    // override the default onclick behaviour to trigger the download.
/*
                    node.onLabelClick = function(me)
                    {
                        return (!this.isContainer());
                    };
*/

                });
                if (callback)
                {
                    callback();
                }
            };
        }

        handleFailure = function(e, e2)
        {
            alert("handleFailure");
        }

        handleException = function(e, e2)
        {
            openDebugAlert(e2);
        }

    </script>
</head>
<body>
    #buildTabs($buildResult "working-dir")

#if($buildResult.completed())
    <div id="loading" style="display:none;"><img src="$base/images/treeview/loading.gif" alt="loading..."/></div>
    <div id="browseTree"></div>
#else
    <p>
        #wwtext("name=working.dir.pending")
    </p>
#end

    #tabEnd()
</body>
</html>
