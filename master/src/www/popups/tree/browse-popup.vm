<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <title>file browser</title>

    <link rel="stylesheet" type="text/css" href="/popups/tree/tree.css"/>
    <script type="text/javascript" src="/prototype.js"></script>
    <script type="text/javascript" src="tree/tree.js"></script>
    <script type="text/javascript">
        <!--
            // define the init properties that control the tree.
            //TODO: This works, but there must be a better way to handle the initialisation process.
            window.myTree = new Object();
            window.myTree.url = "http://localhost:8080/ajax/list.action";
            window.myTree.anchor = "browse";

            // initialise the initial visible path.
            window.myTree.initUid = new Array();
#foreach($uid in $action.uids)
        window.myTree.initUid.push('$uid');
#end

            window.onload = onInit;
            window.onresize = onResize;

            function onInit(event)
            {
                // resize the viewport so that it is the correct size.
                onResize(event);
                // initialise the tree view.
                init(event);
            }

            function copySelectedToParentForm()
            {
                var formFieldObject = opener.document.forms['$formname'].elements['$fieldname'];
                formFieldObject.value = currentSelectionValue();
                window.close();
            }

            /*
             * Handle the resizing of the viewport to ensure that it is the correct size for
             * the open window.
             */
            function onResize(event)
            {
                var vElem = document.getElementById("view");

                var pElem = document.getElementById("pathElement");
                var fElem = document.getElementById("selectForm");
                var tElem = document.getElementById("toolbar");

                var pDim = Element.getDimensions(pElem);
                var fDim = Element.getDimensions(fElem);
                var tDim = Element.getDimensions(tElem);
                var wDim = windowSize();

                // work out the fudge factor - ie: the margin values.
                var fudgeFactor = 70;

                // todo: remove this fudge factor - it represents the height of the margins.
                var viewHeight = wDim.height - tDim.height - pDim.height - fDim.height - fudgeFactor;
                Element.setStyle(vElem, {"height":viewHeight + "px"});
                Element.setStyle(vElem, {"width":pDim.width + "px"});
            }

            /*
             * Return the dimensions of the window.
             *
             *    width: the window width.
             *    height: the window height.
             */
            function windowSize()
            {
                var myWidth = 0, myHeight = 0;
                if (typeof( window.innerWidth ) == 'number')
                {
                    //Non-IE
                    myWidth = window.innerWidth;
                    myHeight = window.innerHeight;
                }
                else if (document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ))
                {
                    //IE 6+ in 'standards compliant mode'
                    myWidth = document.documentElement.clientWidth;
                    myHeight = document.documentElement.clientHeight;
                }
                else if (document.body && ( document.body.clientWidth || document.body.clientHeight ))
                {
                    //IE 4 compatible
                    myWidth = document.body.clientWidth;
                    myHeight = document.body.clientHeight;
                }
                return {"width":myWidth, "height":myHeight};
            }
        // -->
    </script>

    <style type="text/css">
        .viewport{
            overflow:auto;
        }

        .bordered{
            margin:0px 0px 10px 0px;
            border-width:1px;
            border-color:blue;
            border-style:solid;
        }

        .nofluff {
           margin:0px;
           padding:0px;
        }

        .toolbarIcon {
            border-width:0px;
        }

    </style>

</head>

<body>

    <div class="bordered" id="toolbar">
        Toolbar:&nbsp;
        <a href="" onclick="selectParentNode(); return false;"><img class="toolbarIcon" src="/images/cd_go.png" alt="up"/></a>
    </div>

    <div class="bordered" id="pathElement">
        Path:&nbsp;<span id="path"></span>
    </div>
    <!--
    is it possible to tie the viewport size to the size
    of the popup window? preferably it would take up the room not used
    by the toolbar top and form at the base of the page.
    -->
    <div class="viewport bordered" id="view">
        <div id="browse" class="tree">
        </div>
    </div>

    <div class="bordered" id="selectForm">
        <form class="nofluff" name="form" action="" onsubmit="window.close();">
            <table>
                <tr>
                    <td nowrap>Selected:</td>
                    <td><input id="selected" type="text" size="40"/></td>
                    <td><input type="submit" value="select" onclick="copySelectedToParentForm();"/></td>
                    <td><input type="submit" value="cancel"/></td>
                </tr>
            </table>
        </form>
    </div>

</body>
</html>
