#authorisationTags($principle)
<content tag="selectedTab">administration</content>
<html>
<head>
    <title>#wwtext("name=administration")</title>
	<script type="text/javascript">
	    var actionInProgress = false;

        var configTree;
        var templateTree;
        var visibleTree;

        // ------------------------------------------------------------------
	    // Shared tree functions
        // ------------------------------------------------------------------

        var handleConfigurationResponse = function(result)
        {
            if (result.success)
            {
                if (result.newPanel)
                {
                    Ext.get('detail-pane').update(result.newPanel, true);
                }

                if (configTree)
                {
                    configTree.handleResponse(result);
                }

                if (templateTree)
                {
                    templateTree.handleResponse(result);
                }

                if (visibleTree.dead)
                {
                    // Config tree dies when the root is deleted.
                    nestedLayout.getRegion('west').showPanel('template-tree');
                    visibleTree = templateTree;                    
                }

                visibleTree.redirectToNewPath(result);
            }
            else
            {
                if(result.actionErrors && result.actionErrors.length > 0)
                {
                    showStatus(result.actionErrors[0], 'failure');
                }
            }
        }

        // ------------------------------------------------------------------
        // Config tree
        // ------------------------------------------------------------------

        var createConfigTree = function(project, cls, iconCls)
        {
            Ext.get('config-tree').update('');

            var loader = new ZUTUBI.ConfigTreeLoader('$base/aconfig');

            configTree = new ZUTUBI.ConfigTree('config-tree', {
                pathPrefix: '${scope}',
                animate: false,
                loader: loader,
                rootVisible: true,
                title: 'configuration'
            });

            var root = new Ext.tree.AsyncTreeNode({
                id: project,
                text: project,
                cls: cls,
                iconCls: iconCls,
                allowDrag: false,
                allowDrop: false
            });

            configTree.setRootNode(root);
            configTree.getSelectionModel().on('selectionchange', onConfigSelect);
            configTree.render();
            root.expand();
        }

        var clonePath = function(path)
        {
            runAjaxRequest('$base/aconfig/' + path + '?clone=input');
        }

        // ------------------------------------------------------------------
        // Template tree
        // ------------------------------------------------------------------

        var onTemplateSelect = function(sm, node)
        {
            if(node)
            {
                Ext.get('detail-pane').load({
                    url: '$base/atemplate/$scope/' + node.id,
                    scripts: true,
                    callback: function(element, success, response) {
                        if(!success)
                        {
                            onSelectFailure(element, response);
                        }
                    }
                });
            }
        }

        var configureRecord = function(id)
        {
            nestedLayout.getRegion('west').showPanel('config-tree');
        }

        var selectTemplate = function(path)
        {
            templateTree.getSelectionModel().clearSelections();
            templateTree.selectPath(templateTree.getRootNode().getPath() + '/' + path);
        }

        // ------------------------------------------------------------------
        // Layout
        // ------------------------------------------------------------------

        var Layout = function()
        {
            var centerRegion;
#if($path)
            var path = '$path';
#else
            var path = '';
#end

            return {
                init : function()
                {
                    centerRegion = nestedLayout.getRegion('center');
                    var centerPanel = centerRegion.getPanel(0);
                    centerPanel.setTitle('');
                    centerPanel.getEl().setStyle('margin', '4px');

                    nestedLayout.addRegion('west', {
                        split:true,
                        initialSize: 300,
                        titlebar: false,
                        collapsible: true,
                        animate: true
                    });

                    var templateLoader = new ZUTUBI.ConfigTreeLoader('$base/atemplate/$scope');

                    templateTree = new ZUTUBI.TemplateTree('$scope', 'template-tree', {
                        animate: false,
                        loader: templateLoader,
                        rootVisible: false,
                        title: '${scope}s'
                    });

                    var templateRoot = new Ext.tree.AsyncTreeNode({
                        id: 'x',
                        text: 'settings',
                        allowDrag: false,
                        allowDrop: false
                    });

                    templateTree.setRootNode(templateRoot);
                    templateTree.getSelectionModel().on('selectionchange', onTemplateSelect);

                    nestedLayout.beginUpdate();
                    nestedLayout.add('west', new Ext.ContentPanel('template-tree', {title: 'hierarchy', autoScroll: true, fitToFrame: true}));
                    nestedLayout.add('west', new Ext.ContentPanel('config-tree', {title: 'configuration', autoScroll: true, fitToFrame: true}));
                    nestedLayout.endUpdate();

                    nestedLayout.getRegion('west').on('panelactivated', function(region, panel) {
                        if(panel.title == 'configuration')
                        {
                            var node = templateTree.getSelectionModel().getSelectedNode();
                            if (!node)
                            {
                                node = templateTree.getRootNode();
                            }

                            if(!configTree || configTree.getRootNode().id != node.id)
                            {
                                createConfigTree(node.id, node.attributes.cls, node.attributes.iconCls);
                            }

                            configTree.getSelectionModel().clearSelections();
                            configTree.selectPath(node.id);
                            visibleTree = configTree;
                        }
                        else
                        {
                            var node;

                            if(configTree)
                            {
                                var configId = configTree.getRootNode().id;
                                node = templateTree.getNodeById(configId);
                            }

                            if(!node)
                            {
                                node = templateTree.getRootNode().firstChild;
                            }

                            templateTree.getSelectionModel().clearSelections();
                            node.select();
                            visibleTree = templateTree;
                        }
                    });

                    templateTree.render();

#if($configTreePath)
                    templateTree.expandToPath('$templateTreePath');
                    createConfigTree('$owner', null, 'config-${configClassification}-icon');
                    configTree.selectConfigPath('$configTreePath');
                    visibleTree = configTree;
#else
                    templateRoot.expand(false, false, function() {
                        templateRoot.firstChild.expand();
                        nestedLayout.getRegion('west').showPanel('template-tree');
                    });
#end
                }
            }
        }();

        Ext.onReady(Layout.init, Layout, true);
	</script>
</head>
<body>
    #adminTabs("${tab}")

    <div id="template-tree" class="x-layout-inactive-content" style="padding: 10px">
    </div>

    <div id="config-tree" class="x-layout-inactive-content" style="padding: 10px">
    </div>

    <div id="detail-pane" style="padding: 10px; min-height: 100%">
        #parse("/template/includes/actionerrors.vm")
    </div>
</body>
</html>
