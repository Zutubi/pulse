<style type="text/css">
    .panel{
        border-bottom-style:dotted;
        border-right-style:dotted;
        border-left-style:dotted;
        border-bottom-color:gray;
        border-left-color:gray;
        border-right-color:gray;
        border-bottom-width:1px;
        border-right-width:1px;
        border-left-width:1px;
        margin-bottom:3em;
    }

    .header {
        padding:8px;
        background-color:#E0E6F0;
        border-top-width:1px;
        border-top-style:dotted;
        border-top-color:gray;
    }
    
    .description {
        padding:8px;
        margin:0;
        font-size: 10px;
    }

    .config-state-table
    {
        width:100%
    }
    .config-state-table th {
        font-weight:bold;
        font-size:large;
        background-color:#E0E6F0;
        border-top-width:1px;
        border-top-style:dotted;
        border-top-color:gray;
    }
    .config-state-table .odd {
        background-color:#ffffff
    }
    .config-state-table .even {
        background-color:#f6f6f6;
    }
    .config-state-table .first {
        padding-top:4px;
    }
    .config-state-table .last {
        padding-bottom:4px;
    }
    .config-state-table .label {
        text-align: right;
        font-weight: bold;
        padding-top:3px;
        padding-right:5px;
        padding-bottom:3px;
        padding-left:5px;
        border-right: solid 1px #ddd;
        background-color:#f6f6f6;

    }
    .config-state-table .value {
        font-weight:normal;
        padding-top:3px;
        padding-right:5px;
        padding-bottom:3px;
        padding-left:5px;
    }

    .form-container{
        padding:10px;
        padding-right:50px
    }

    #left-column {

    }

    #right-column {
        padding-left:50px;
        width:300px;
        vertical-align:top;
    }
</style>

#macro(renderform)
    <div class="panel">
        <h3 class="header">#i18n("key=form.heading")</h3>
        ##<!-- add some space around the form so that it does not sit directly on the border. -->
        <div class="form-container">
            #pform("path=$config.path" "formName=mainform" "displayMode=true" "ajax=true" "namespace=aconfig")
        </div>
        <script type="text/javascript">
            mainform.on('actioncomplete', function(form, action)
            {
                handleConfigurationResponse(action.result);
            });
        </script>
        #parse("/aconfig/check.vm")
    </div>
#end

#macro(renderstate)
    <div class="panel">
        #i18nexists("key=state.heading")<h3 class="header">#i18n("key=state.heading")</h3>#end
        #i18nexists("key=state.description")<p class="description">#i18n("key=state.description")</p>#end
        <table class="config-state-table">
            #i18nexists("key=state.table.heading")<th colspan="2">#i18n("key=state.table.heading")</th>#end
            #set($odd = true)
            #foreach($field in $config.displayFields)
            <tr>
                <td class="label" width="20%">#i18n("key=${field}.label")</td>
                <td class="value #if($odd) odd #else even #end">$config.format($field)</td>
            </tr>
                #if($odd) #set($odd = false) #else #set($odd = true) #end
            #end
        </table>
    </div>
#end

#set($config = $action.configuration)
<h2>$!webwork.htmlEncode($config.displayName)</h2>
<p class="introduction">
    #i18n("key=introduction")
</p>
<table>
    <tr>
#if($config.record || $config.extensions.size() == 0)
        <td id="left-column">
            #if ($config.displayFields.size() > 0)
                #renderstate()
            #end
            #if( $config.simpleProperties.size() > 0)
                #renderform()
            #end
        </td>
        
        <td id="right-column">
            #if ($config.actions.size() > 0)
            <div style="padding-bottom:15px;">
            <h3>actions</h3>
            <p>
            <ul>
                #foreach($action in $config.actions)
                    <li>+ <a href="#" onclick="actionPath('${config.path}?${action}'); return false;">#i18n("key=${action}.label")</a></li>
                #end
            </ul>
            </p>
            </div>
            #end

            #if( $config.nestedProperties.size() > 0)
            <div>
            <h3>links</h3>
            <p>
            <ul>
                #foreach($prop in $config.nestedProperties)
                    <li>+ <a href="#" onclick="selectPath('${config.path}/${prop}'); return false;">#displayname("path=${config.path}/${prop}")</a></li>
                #end
            </ul>
            </p>
            </div>
            #end
        </td>
#else
    ## We don't know what type we are dealing with, it needs to be configured
    ## by a wizard.
    <table class="template-actions" cellspacing="5px">
        <tr>
            <th><a href="#" class="unadorned" onclick="addToPath('${config.path}'); return false"><img alt="configure" src="$base/images/pencil.gif"/></a> <a href="#" onclick="addToPath('${config.path}'); return false">configure</a></th>
            <td>configure a #i18n("key=label") using the wizard</td>
        </tr>
    </table>
#end

    </tr>
</table>