<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>

    <display-name>Pulse</display-name>
    <description>Continuous Integration Web UI</description>

    <!--
    This filter must be placed before any filter that replies upon knowing the security/user related information.

    This filter is placed at the start of the chain so that a Context can be setup in the SecurityContextHolder at the
    beginning of a web request, and any changes to the Context can be copied to the HttpSession when the web request
    ends (ready for use with the next web request).
    -->
    <filter>
        <filter-name>Acegi Session Filter</filter-name>
        <filter-class>com.zutubi.pulse.spring.FilterWrapper</filter-class>
        <init-param>
            <param-name>delegateClassName</param-name>
            <param-value>org.acegisecurity.context.HttpSessionContextIntegrationFilter</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.webwork.sitemesh.VelocityPageFilter</filter-class>
    </filter>

    <filter>
        <filter-name>redirect</filter-name>
        <filter-class>com.zutubi.pulse.servlet.RedirectServletFilter</filter-class>
        <init-param>
            <param-name>destination</param-name>
            <param-value>default.action</param-value>
        </init-param>
    </filter>

    <!-- webwork 2.2 filter dispatcher support.
        <filter>
            <filter-name>webwork</filter-name>
            <filter-class>com.opensymphony.webwork.dispatcher.FilterDispatcher</filter-class>
        </filter>

    -->
    <filter-mapping>
        <filter-name>Acegi Session Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>redirect</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>

    <!-- webwork 2.2 filter dispatcher support.
        <filter-mapping>
            <filter-name>webwork</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>

    -->

    <!--
    If the System property 'xwork.reload.bundles' is specified, the following listener to set
    xwork to not cache property values loaded for I18N. This should only be used during development
    and debugging.
    -->
    <listener>
        <listener-class>com.zutubi.pulse.xwork.servlet.ReloadResourceContextListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>webwork</servlet-name>
        <servlet-class>com.opensymphony.webwork.dispatcher.ServletDispatcher</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>hessian</servlet-name>
        <servlet-class>com.zutubi.pulse.hessian.CustomHessianServlet</servlet-class>
        <init-param>
            <param-name>home-class</param-name>
            <param-value>com.zutubi.pulse.MasterServiceImpl</param-value>
        </init-param>
        <init-param>
            <param-name>home-api</param-name>
            <param-value>com.zutubi.pulse.services.MasterService</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>download</servlet-name>
        <servlet-class>com.zutubi.pulse.servlet.DownloadResultsServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>XmlRpcServlet</servlet-name>
        <servlet-class>com.zutubi.pulse.xmlrpc.MasterXmlRpcServlet</servlet-class>
    </servlet>

    <!--
        <servlet>
            <servlet-name>UserProfileServlet</servlet-name>
            <servlet-class>com.zutubilet.ProfileServlet</servlet-class>
        </servlet>
    -->

    <servlet>
        <servlet-name>ViewFileServlet</servlet-name>
        <servlet-class>com.zutubi.pulse.servlet.ViewFileServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>hessian</servlet-name>
        <url-pattern>/hessian</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>webwork</servlet-name>
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>download</servlet-name>
        <url-pattern>/download</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>XmlRpcServlet</servlet-name>
        <url-pattern>/xmlrpc</url-pattern>
    </servlet-mapping>

    <!--
        <servlet-mapping>
            <servlet-name>UserProfileServlet</servlet-name>
            <url-pattern>/user/*</url-pattern>
        </servlet-mapping>
    -->

    <servlet-mapping>
        <servlet-name>ViewFileServlet</servlet-name>
        <url-pattern>/view/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!--
    Custom error pages.
    -->
    <error-page>
        <error-code>500</error-code>
        <location>/internalError.action</location>
    </error-page>
<!--
    <error-page>
        <error-code>404</error-code>
        <location>/404.action</location>
    </error-page>
-->

</web-app>