head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2006.03.10.14.49.30;	author daniel;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.10.04.36.01;	author daniel;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.09.22.55.14;	author daniel;	state Exp;
branches;
next	;


desc
@@


1.3
log
@module2 created referencing dir1 dir2 by author a
@
text
@# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-e prog		Run "prog" on "cvs export" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# NOTE:  If you change any of the "Run" options above, you'll have to
# release and re-checkout any working directories of these modules.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.

module -a unit-test/CvsClientTest/testCheckoutModule/dir1 unit-test/CvsClientTest/testCheckoutModule/dir2
module2 -a unit-test/CvsClientTest/testHasModuleChangedSince/dir1 unit-test/CvsClientTest/testHasModuleChangedSince/dir2
@


1.2
log
@module created referencing dir1 dir2 by author a
@
text
@d29 1
@


1.1
log
@initial checkin
@
text
@d27 2
@


