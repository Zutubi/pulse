<?xml version="1.0" encoding="UTF-8"?>
<!-- -->
<!-- -->
<!-- -->
<project name="Cinnamon Bob" basedir="." xmlns:ivy="antlib:fr.jayasoft.ivy.ant">

    <property file="build.properties"/>

    <target name="clean">
        <delete dir="build"/>
    </target>

    <target name="clean.all" depends="clean">
        <foreach target="clean"/>
    </target>

    <target name="build.core">
        <ant inheritAll="false" dir="core" antfile="build.xml" target="build.module"/>
    </target>

    <target name="build.server-core" depends="build.core">
        <ant inheritAll="false" dir="server-core" antfile="build.xml" target="build.module"/>
    </target>

    <target name="build.local" depends="build.core">
        <ant inheritAll="false" dir="local" antfile="build.xml" target="build.module"/>
    </target>

    <target name="build.master" depends="build.server-core">
        <ant inheritAll="false" dir="master" antfile="build.xml" target="build.module"/>
    </target>

    <target name="build.slave" depends="build.server-core">
        <ant inheritAll="false" dir="slave" antfile="build.xml" target="build.module"/>
    </target>

    <target name="package.local" depends="init, build.local">

        <property name="package.root" value="build/package"/>
        <delete dir="${package.root}"/>
        <mkdir dir="${package.root}"/>

        <copy todir="${package.root}/bin">
            <fileset dir="core/src/bin" includes="**/*"/>
            <fileset dir="local/src/bin" includes="**/*"/>
        </copy>

        <fixcrlf srcdir="${package.root}/bin" eol="lf" eof="remove" includes="**/*.sh"/>
        <chmod perm="755" dir="${package.root}/bin" includes="**/*.sh"/>

        <retrieve.dependencies module="." conf="local" dest="${package.root}/lib"/>

        <!-- place holder for package documentation -->
        <copy todir="${package.root}/docs">
            <fileset dir="etc" includes="delete-me.txt"/>
        </copy>
        <!-- place holder for the log directory -->
        <copy todir="${package.root}/system/log">
            <fileset dir="etc" includes="delete-me.txt"/>
        </copy>

        <zip destfile="build/bob-local-${bob.version}.zip">
            <zipfileset dir="build/package" includes="**/*" prefix="bob-local-${bob.version}"/>
        </zip>

    </target>

    <target name="package.master" depends="init, build.local, build.master">

        <property name="package.name" value="bob-master-${bob.version}"/>
        <property name="package.root" value="build/package/${package.name}"/>

        <delete dir="${package.root}"/>
        <mkdir dir="${package.root}"/>

        <copy todir="${package.root}/bin">
            <fileset dir="core/src/bin" includes="**/*"/>
            <fileset dir="local/src/bin" includes="**/*"/>
            <fileset dir="server-core/src/bin" includes="**/*"/>
            <fileset dir="master/src/bin" includes="**/*"/>
        </copy>

        <fixcrlf srcdir="${package.root}/bin" eol="lf" eof="remove" includes="**/*.sh"/>
        <chmod perm="755" dir="${package.root}/bin" includes="**/*.sh" verbose="true"/>

        <retrieve.dependencies module="." conf="local" dest="${package.root}/lib"/>
        <retrieve.dependencies module="." conf="master" dest="${package.root}/lib"/>

        <!-- place holder for package documentation -->
        <copy todir="${package.root}/docs">
            <fileset dir="etc" includes="delete-me.txt"/>
        </copy>
        <copy todir="${package.root}/system/templates">
            <fileset dir="master/src/templates" includes="**/*.vm **/*.ftl"/>
        </copy>
        <!-- place holder for the log directory -->
        <copy todir="${package.root}/system/log">
            <fileset dir="etc" includes="delete-me.txt"/>
        </copy>
        <copy todir="${package.root}/system/www">
            <fileset dir="server-core/src/www" includes="**/*"/>
            <fileset dir="master/src/www" includes="**/*"/>
        </copy>

        <!-- /config is for user configuration properties -->
        <copy todir="${package.root}/system/config">
            <fileset dir="master/etc" includes="bob-defaults.properties,logging.properties"/>
        </copy>

        <copy todir="${package.root}/lib">
            <fileset dir="master/etc" includes="*.xml"/>
        </copy>

        <!-- the ant zip command doesn't preserve permissions, so we call out to zip -->
        <exec executable="zip" dir="${package.root}/..">
            <arg line="-r ../${package.name}.zip ${package.name}"/>
        </exec>

        <tar destfile="build/${package.name}.tgz" compression="gzip">
            <tarfileset dir="${package.root}/.." mode="755" username="root" group="root">
                <include name="${package.name}/bin/*"/>
            </tarfileset>
            <tarfileset dir="${package.root}/.." username="root" group="root">
                <include name="${package.name}/**/*"/>
                <exclude name="${package.name}/bin/*"/>
            </tarfileset>
        </tar>
    </target>

    <target name="init">
        <property name="project.root.dir" value="."/>
        <property name="project.repository" value="${project.root.dir}/build/repository"/>
    </target>

    <!--
     Refresh the projects lib directory by retrieving the latest module dependencies.
    -->
    <target name="refresh.lib" depends="clean, init">

        <!-- refreshing the lib directory -->
        <delete dir="lib"/>

	    <!-- use the default ivy configuration properties. -->
    	<property file="ivy.properties"/>
        <ivy:configure/>
        <retrieve.dependencies module="core" dest="lib"/>
        <retrieve.dependencies module="server-core" dest="lib"/>
        <retrieve.dependencies module="local" dest="lib"/>
        <retrieve.dependencies module="master" dest="lib"/>
        <retrieve.dependencies module="slave" dest="lib"/>
    </target>

    <!-- 
     Retrieve the dependencies for the specified module, and place them into the 
     destination directory.
    -->
    <macrodef name="retrieve.dependencies">
        <attribute name="module"/>
        <attribute name="conf" default="external"/>
        <attribute name="dest" default="lib"/>
        <sequential>
    	    <!-- resolve the modules ivy file. -->
            <ivy:resolve file="@{module}/ivy.xml" conf="@{conf}"/>
            <ivy:deliver deliverpattern="${project.repository}/[module]/ivy-[revision].xml"/>
            <ivy:retrieve pattern="@{dest}/[artifact]-[revision].[ext]" validate="true" conf="@{conf}"/>
        </sequential>
    </macrodef>

    <!--
     Execute the specified target on each of the modules.
    -->
    <macrodef name="foreach">
        <attribute name="target"/>
        <sequential>
            <ant inheritAll="false" dir="core" antfile="build.xml" target="@{target}"/>
            <ant inheritAll="false" dir="local" antfile="build.xml" target="@{target}"/>
            <ant inheritAll="false" dir="server-core" antfile="build.xml" target="@{target}"/>
            <ant inheritAll="false" dir="master" antfile="build.xml" target="@{target}"/>
            <ant inheritAll="false" dir="slave" antfile="build.xml" target="@{target}"/>
        </sequential>
    </macrodef>

</project>
